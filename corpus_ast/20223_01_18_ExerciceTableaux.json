{
    "project_name": "20223_01_18_ExerciceTableaux",
    "functions": [
        {
            "function_name": "main",
            "function_code": "int main(void)\n{\n\t \n\tint tab[100] = {12, 15, 17, 22, 15, 11};\n\t \n\tint tab2[50] = { 0 };\n\t \n\tint tab3[] = { 10, 20 , 30 , 40, 50, 60, 70, 80 };\n\n\tint la_position; \n\n\tif ( trouver_val(tab, 6, 15, &la_position) )\n\t{\n\t\tprintf(\"La valeur a ete trouvee a la position %d\\n\", la_position);\n\t}",
            "function_ast": "FuncDef(\n  decl=\n    Decl(\n      name='main',\n      quals=[],\n      align=[],\n      storage=[],\n      funcspec=[],\n      type=\n        FuncDecl(\n          args=\n            ParamList(\n              params[0]=\n                Typename(\n                  name=None,\n                  quals=[],\n                  align=None,\n                  type=\n                    TypeDecl(\n                      declname=None,\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['void'],\n                        )\n                    )\n                )\n            )\n          type=\n            TypeDecl(\n              declname='main',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['int'],\n                )\n            )\n        )\n    )\n  body=\n    Compound(\n      block_items[0]=\n        Decl(\n          name='tab',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            ArrayDecl(\n              dim_quals=[],\n              type=\n                TypeDecl(\n                  declname='tab',\n                  quals=[],\n                  align=None,\n                  type=\n                    IdentifierType(\n                      names=['int'],\n                    )\n                )\n              dim=\n                Constant(\n                  type='int',\n                  value='100',\n                )\n            )\n          init=\n            InitList(\n              exprs[0]=\n                Constant(\n                  type='int',\n                  value='12',\n                )\n              exprs[1]=\n                Constant(\n                  type='int',\n                  value='15',\n                )\n              exprs[2]=\n                Constant(\n                  type='int',\n                  value='17',\n                )\n              exprs[3]=\n                Constant(\n                  type='int',\n                  value='22',\n                )\n              exprs[4]=\n                Constant(\n                  type='int',\n                  value='15',\n                )\n              exprs[5]=\n                Constant(\n                  type='int',\n                  value='11',\n                )\n            )\n        )\n      block_items[1]=\n        Decl(\n          name='tab2',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            ArrayDecl(\n              dim_quals=[],\n              type=\n                TypeDecl(\n                  declname='tab2',\n                  quals=[],\n                  align=None,\n                  type=\n                    IdentifierType(\n                      names=['int'],\n                    )\n                )\n              dim=\n                Constant(\n                  type='int',\n                  value='50',\n                )\n            )\n          init=\n            InitList(\n              exprs[0]=\n                Constant(\n                  type='int',\n                  value='0',\n                )\n            )\n        )\n      block_items[2]=\n        Decl(\n          name='tab3',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            ArrayDecl(\n              dim_quals=[],\n              type=\n                TypeDecl(\n                  declname='tab3',\n                  quals=[],\n                  align=None,\n                  type=\n                    IdentifierType(\n                      names=['int'],\n                    )\n                )\n            )\n          init=\n            InitList(\n              exprs[0]=\n                Constant(\n                  type='int',\n                  value='10',\n                )\n              exprs[1]=\n                Constant(\n                  type='int',\n                  value='20',\n                )\n              exprs[2]=\n                Constant(\n                  type='int',\n                  value='30',\n                )\n              exprs[3]=\n                Constant(\n                  type='int',\n                  value='40',\n                )\n              exprs[4]=\n                Constant(\n                  type='int',\n                  value='50',\n                )\n              exprs[5]=\n                Constant(\n                  type='int',\n                  value='60',\n                )\n              exprs[6]=\n                Constant(\n                  type='int',\n                  value='70',\n                )\n              exprs[7]=\n                Constant(\n                  type='int',\n                  value='80',\n                )\n            )\n        )\n      block_items[3]=\n        Decl(\n          name='la_position',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            TypeDecl(\n              declname='la_position',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['int'],\n                )\n            )\n        )\n      block_items[4]=\n        If(\n          cond=\n            FuncCall(\n              name=\n                ID(\n                  name='trouver_val',\n                )\n              args=\n                ExprList(\n                  exprs[0]=\n                    ID(\n                      name='tab',\n                    )\n                  exprs[1]=\n                    Constant(\n                      type='int',\n                      value='6',\n                    )\n                  exprs[2]=\n                    Constant(\n                      type='int',\n                      value='15',\n                    )\n                  exprs[3]=\n                    UnaryOp(\n                      op='&',\n                      expr=\n                        ID(\n                          name='la_position',\n                        )\n                    )\n                )\n            )\n          iftrue=\n            Compound(\n              block_items[0]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='printf',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        Constant(\n                          type='string',\n                          value='\"La valeur a ete trouvee a la position %d\\\\n\"',\n                        )\n                      exprs[1]=\n                        ID(\n                          name='la_position',\n                        )\n                    )\n                )\n            )\n          iffalse=\n            Compound(\n              block_items[0]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='printf',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        Constant(\n                          type='string',\n                          value='\"La valeur ne se trouve pas dans le tableau.\\\\n\"',\n                        )\n                    )\n                )\n            )\n        )\n      block_items[5]=\n        FuncCall(\n          name=\n            ID(\n              name='system',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                Constant(\n                  type='string',\n                  value='\"pause\"',\n                )\n            )\n        )\n      block_items[6]=\n        Return(\n          expr=\n            Constant(\n              type='int',\n              value='0',\n            )\n        )\n    )\n)"
        },
        {
            "function_name": "trouver_val",
            "function_code": "int trouver_val(int tab[], int taille, int val, int* position)\n{\n\tint pos = 0;   \n\n\twhile (tab[pos] != val && pos < taille)\n\t{\n\t\tpos++;\n\t}",
            "function_ast": "FuncDef(\n  decl=\n    Decl(\n      name='trouver_val',\n      quals=[],\n      align=[],\n      storage=[],\n      funcspec=[],\n      type=\n        FuncDecl(\n          args=\n            ParamList(\n              params[0]=\n                Decl(\n                  name='tab',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    ArrayDecl(\n                      dim_quals=[],\n                      type=\n                        TypeDecl(\n                          declname='tab',\n                          quals=[],\n                          align=None,\n                          type=\n                            IdentifierType(\n                              names=['int'],\n                            )\n                        )\n                    )\n                )\n              params[1]=\n                Decl(\n                  name='taille',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    TypeDecl(\n                      declname='taille',\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['int'],\n                        )\n                    )\n                )\n              params[2]=\n                Decl(\n                  name='val',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    TypeDecl(\n                      declname='val',\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['int'],\n                        )\n                    )\n                )\n              params[3]=\n                Decl(\n                  name='position',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    PtrDecl(\n                      quals=[],\n                      type=\n                        TypeDecl(\n                          declname='position',\n                          quals=[],\n                          align=None,\n                          type=\n                            IdentifierType(\n                              names=['int'],\n                            )\n                        )\n                    )\n                )\n            )\n          type=\n            TypeDecl(\n              declname='trouver_val',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['int'],\n                )\n            )\n        )\n    )\n  body=\n    Compound(\n      block_items[0]=\n        Decl(\n          name='pos',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            TypeDecl(\n              declname='pos',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['int'],\n                )\n            )\n          init=\n            Constant(\n              type='int',\n              value='0',\n            )\n        )\n      block_items[1]=\n        While(\n          cond=\n            BinaryOp(\n              op='&&',\n              left=\n                BinaryOp(\n                  op='!=',\n                  left=\n                    ArrayRef(\n                      name=\n                        ID(\n                          name='tab',\n                        )\n                      subscript=\n                        ID(\n                          name='pos',\n                        )\n                    )\n                  right=\n                    ID(\n                      name='val',\n                    )\n                )\n              right=\n                BinaryOp(\n                  op='<',\n                  left=\n                    ID(\n                      name='pos',\n                    )\n                  right=\n                    ID(\n                      name='taille',\n                    )\n                )\n            )\n          stmt=\n            Compound(\n              block_items[0]=\n                UnaryOp(\n                  op='p++',\n                  expr=\n                    ID(\n                      name='pos',\n                    )\n                )\n            )\n        )\n      block_items[2]=\n        If(\n          cond=\n            BinaryOp(\n              op='==',\n              left=\n                ArrayRef(\n                  name=\n                    ID(\n                      name='tab',\n                    )\n                  subscript=\n                    ID(\n                      name='pos',\n                    )\n                )\n              right=\n                ID(\n                  name='val',\n                )\n            )\n          iftrue=\n            Compound(\n              block_items[0]=\n                Assignment(\n                  op='=',\n                  lvalue=\n                    UnaryOp(\n                      op='*',\n                      expr=\n                        ID(\n                          name='position',\n                        )\n                    )\n                  rvalue=\n                    ID(\n                      name='pos',\n                    )\n                )\n              block_items[1]=\n                Return(\n                  expr=\n                    Constant(\n                      type='int',\n                      value='1',\n                    )\n                )\n            )\n        )\n      block_items[3]=\n        Return(\n          expr=\n            Constant(\n              type='int',\n              value='0',\n            )\n        )\n    )\n)"
        }
    ]
}