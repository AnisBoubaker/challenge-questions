{
    "project_name": "20233_02_08_switch_case",
    "functions": [
        {
            "function_name": "main",
            "function_code": "int main(void) {\n    char choix;\n    printf(\"Pressez 'A', 'B' ou 'C' pour continuer:\");\n    scanf(\"%c\", &choix);\n\n    switch(choix)\n    {\n        case 'A':\n            printf(\"Vous avez choisi A, bon choix!\\n\");\n            break;  \n        case 'B':\n            printf(\"Vous avez choisi B, pas mal!\\n\");\n            break;\n        case 'C':\n            printf(\"Vous avez choisi C, c\u2019est bien!\\n\");\n            break;\n        default:\n            printf(\"vous deviez saisir A, B ou C\u2026 Quel dommage!\");\n    }",
            "function_ast": "FuncDef(\n  decl=\n    Decl(\n      name='main',\n      quals=[],\n      align=[],\n      storage=[],\n      funcspec=[],\n      type=\n        FuncDecl(\n          args=\n            ParamList(\n              params[0]=\n                Typename(\n                  name=None,\n                  quals=[],\n                  align=None,\n                  type=\n                    TypeDecl(\n                      declname=None,\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['void'],\n                        )\n                    )\n                )\n            )\n          type=\n            TypeDecl(\n              declname='main',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['int'],\n                )\n            )\n        )\n    )\n  body=\n    Compound(\n      block_items[0]=\n        Decl(\n          name='choix',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            TypeDecl(\n              declname='choix',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['char'],\n                )\n            )\n        )\n      block_items[1]=\n        FuncCall(\n          name=\n            ID(\n              name='printf',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                Constant(\n                  type='string',\n                  value='\"Pressez \\'A\\', \\'B\\' ou \\'C\\' pour continuer:\"',\n                )\n            )\n        )\n      block_items[2]=\n        FuncCall(\n          name=\n            ID(\n              name='scanf',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                Constant(\n                  type='string',\n                  value='\"%c\"',\n                )\n              exprs[1]=\n                UnaryOp(\n                  op='&',\n                  expr=\n                    ID(\n                      name='choix',\n                    )\n                )\n            )\n        )\n      block_items[3]=\n        Switch(\n          cond=\n            ID(\n              name='choix',\n            )\n          stmt=\n            Compound(\n              block_items[0]=\n                Case(\n                  expr=\n                    Constant(\n                      type='char',\n                      value=\"'A'\",\n                    )\n                  stmts[0]=\n                    FuncCall(\n                      name=\n                        ID(\n                          name='printf',\n                        )\n                      args=\n                        ExprList(\n                          exprs[0]=\n                            Constant(\n                              type='string',\n                              value='\"Vous avez choisi A, bon choix!\\\\n\"',\n                            )\n                        )\n                    )\n                  stmts[1]=\n                    Break(\n                    )\n                )\n              block_items[1]=\n                Case(\n                  expr=\n                    Constant(\n                      type='char',\n                      value=\"'B'\",\n                    )\n                  stmts[0]=\n                    FuncCall(\n                      name=\n                        ID(\n                          name='printf',\n                        )\n                      args=\n                        ExprList(\n                          exprs[0]=\n                            Constant(\n                              type='string',\n                              value='\"Vous avez choisi B, pas mal!\\\\n\"',\n                            )\n                        )\n                    )\n                  stmts[1]=\n                    Break(\n                    )\n                )\n              block_items[2]=\n                Case(\n                  expr=\n                    Constant(\n                      type='char',\n                      value=\"'C'\",\n                    )\n                  stmts[0]=\n                    FuncCall(\n                      name=\n                        ID(\n                          name='printf',\n                        )\n                      args=\n                        ExprList(\n                          exprs[0]=\n                            Constant(\n                              type='string',\n                              value='\"Vous avez choisi C, c\u2019est bien!\\\\n\"',\n                            )\n                        )\n                    )\n                  stmts[1]=\n                    Break(\n                    )\n                )\n              block_items[3]=\n                Default(\n                  stmts[0]=\n                    FuncCall(\n                      name=\n                        ID(\n                          name='printf',\n                        )\n                      args=\n                        ExprList(\n                          exprs[0]=\n                            Constant(\n                              type='string',\n                              value='\"vous deviez saisir A, B ou C\u2026 Quel dommage!\"',\n                            )\n                        )\n                    )\n                )\n            )\n        )\n    )\n)"
        }
    ]
}