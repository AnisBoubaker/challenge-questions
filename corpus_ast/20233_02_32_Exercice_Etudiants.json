{
    "project_name": "20233_02_32_Exercice_Etudiants",
    "functions": [
        {
            "function_name": "t_etudiant_afficher",
            "function_code": "void t_etudiant_afficher(const t_etudiant* et)\n{\n    printf(\"****** FICHE DE L'ETUDIANT-E *******\\n\");\n    printf(\"Nom et prenom: %s, %s\\n\", et->nom, et->prenom);\n    printf(\"Code permanent: %s\\n\", et->code_perm);\n    printf(\"TP1: %.2lf, TP2: %.2lf\\n\", et->tp1, et->tp2);\n    printf(\"Intra: %.2lf, Final: %.2lf\\n\", et->intra, et->finale);\n}",
            "function_ast": "FuncDef(\n  decl=\n    Decl(\n      name='t_etudiant_afficher',\n      quals=[],\n      align=[],\n      storage=[],\n      funcspec=[],\n      type=\n        FuncDecl(\n          args=\n            ParamList(\n              params[0]=\n                Decl(\n                  name='et',\n                  quals=['const'],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    PtrDecl(\n                      quals=[],\n                      type=\n                        TypeDecl(\n                          declname='et',\n                          quals=['const'],\n                          align=None,\n                          type=\n                            IdentifierType(\n                              names=['t_etudiant'],\n                            )\n                        )\n                    )\n                )\n            )\n          type=\n            TypeDecl(\n              declname='t_etudiant_afficher',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['void'],\n                )\n            )\n        )\n    )\n  body=\n    Compound(\n      block_items[0]=\n        FuncCall(\n          name=\n            ID(\n              name='printf',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                Constant(\n                  type='string',\n                  value='\"****** FICHE DE L\\'ETUDIANT-E *******\\\\n\"',\n                )\n            )\n        )\n      block_items[1]=\n        FuncCall(\n          name=\n            ID(\n              name='printf',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                Constant(\n                  type='string',\n                  value='\"Nom et prenom: %s, %s\\\\n\"',\n                )\n              exprs[1]=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='et',\n                    )\n                  field=\n                    ID(\n                      name='nom',\n                    )\n                )\n              exprs[2]=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='et',\n                    )\n                  field=\n                    ID(\n                      name='prenom',\n                    )\n                )\n            )\n        )\n      block_items[2]=\n        FuncCall(\n          name=\n            ID(\n              name='printf',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                Constant(\n                  type='string',\n                  value='\"Code permanent: %s\\\\n\"',\n                )\n              exprs[1]=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='et',\n                    )\n                  field=\n                    ID(\n                      name='code_perm',\n                    )\n                )\n            )\n        )\n      block_items[3]=\n        FuncCall(\n          name=\n            ID(\n              name='printf',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                Constant(\n                  type='string',\n                  value='\"TP1: %.2lf, TP2: %.2lf\\\\n\"',\n                )\n              exprs[1]=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='et',\n                    )\n                  field=\n                    ID(\n                      name='tp1',\n                    )\n                )\n              exprs[2]=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='et',\n                    )\n                  field=\n                    ID(\n                      name='tp2',\n                    )\n                )\n            )\n        )\n      block_items[4]=\n        FuncCall(\n          name=\n            ID(\n              name='printf',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                Constant(\n                  type='string',\n                  value='\"Intra: %.2lf, Final: %.2lf\\\\n\"',\n                )\n              exprs[1]=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='et',\n                    )\n                  field=\n                    ID(\n                      name='intra',\n                    )\n                )\n              exprs[2]=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='et',\n                    )\n                  field=\n                    ID(\n                      name='finale',\n                    )\n                )\n            )\n        )\n    )\n)"
        },
        {
            "function_name": "t_etudiant_init",
            "function_code": "t_etudiant* t_etudiant_init(const char* nom, const char* prenom)\n{\n    t_etudiant* nouvel_etudiant = 0;\n\n    nouvel_etudiant = (t_etudiant*)malloc(sizeof(t_etudiant));\n    if(nouvel_etudiant == 0)\n    {\n        return 0;\n    }",
            "function_ast": "FuncDef(\n  decl=\n    Decl(\n      name='t_etudiant_init',\n      quals=[],\n      align=[],\n      storage=[],\n      funcspec=[],\n      type=\n        FuncDecl(\n          args=\n            ParamList(\n              params[0]=\n                Decl(\n                  name='nom',\n                  quals=['const'],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    PtrDecl(\n                      quals=[],\n                      type=\n                        TypeDecl(\n                          declname='nom',\n                          quals=['const'],\n                          align=None,\n                          type=\n                            IdentifierType(\n                              names=['char'],\n                            )\n                        )\n                    )\n                )\n              params[1]=\n                Decl(\n                  name='prenom',\n                  quals=['const'],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    PtrDecl(\n                      quals=[],\n                      type=\n                        TypeDecl(\n                          declname='prenom',\n                          quals=['const'],\n                          align=None,\n                          type=\n                            IdentifierType(\n                              names=['char'],\n                            )\n                        )\n                    )\n                )\n            )\n          type=\n            PtrDecl(\n              quals=[],\n              type=\n                TypeDecl(\n                  declname='t_etudiant_init',\n                  quals=[],\n                  align=None,\n                  type=\n                    IdentifierType(\n                      names=['t_etudiant'],\n                    )\n                )\n            )\n        )\n    )\n  body=\n    Compound(\n      block_items[0]=\n        Decl(\n          name='nouvel_etudiant',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            PtrDecl(\n              quals=[],\n              type=\n                TypeDecl(\n                  declname='nouvel_etudiant',\n                  quals=[],\n                  align=None,\n                  type=\n                    IdentifierType(\n                      names=['t_etudiant'],\n                    )\n                )\n            )\n          init=\n            Constant(\n              type='int',\n              value='0',\n            )\n        )\n      block_items[1]=\n        Assignment(\n          op='=',\n          lvalue=\n            ID(\n              name='nouvel_etudiant',\n            )\n          rvalue=\n            Cast(\n              to_type=\n                Typename(\n                  name=None,\n                  quals=[],\n                  align=None,\n                  type=\n                    PtrDecl(\n                      quals=[],\n                      type=\n                        TypeDecl(\n                          declname=None,\n                          quals=[],\n                          align=None,\n                          type=\n                            IdentifierType(\n                              names=['t_etudiant'],\n                            )\n                        )\n                    )\n                )\n              expr=\n                FuncCall(\n                  name=\n                    ID(\n                      name='malloc',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        UnaryOp(\n                          op='sizeof',\n                          expr=\n                            Typename(\n                              name=None,\n                              quals=[],\n                              align=None,\n                              type=\n                                TypeDecl(\n                                  declname=None,\n                                  quals=[],\n                                  align=None,\n                                  type=\n                                    IdentifierType(\n                                      names=['t_etudiant'],\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        )\n      block_items[2]=\n        If(\n          cond=\n            BinaryOp(\n              op='==',\n              left=\n                ID(\n                  name='nouvel_etudiant',\n                )\n              right=\n                Constant(\n                  type='int',\n                  value='0',\n                )\n            )\n          iftrue=\n            Compound(\n              block_items[0]=\n                Return(\n                  expr=\n                    Constant(\n                      type='int',\n                      value='0',\n                    )\n                )\n            )\n        )\n      block_items[3]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='->',\n              name=\n                ID(\n                  name='nouvel_etudiant',\n                )\n              field=\n                ID(\n                  name='nom',\n                )\n            )\n          rvalue=\n            Cast(\n              to_type=\n                Typename(\n                  name=None,\n                  quals=[],\n                  align=None,\n                  type=\n                    PtrDecl(\n                      quals=[],\n                      type=\n                        TypeDecl(\n                          declname=None,\n                          quals=[],\n                          align=None,\n                          type=\n                            IdentifierType(\n                              names=['char'],\n                            )\n                        )\n                    )\n                )\n              expr=\n                FuncCall(\n                  name=\n                    ID(\n                      name='malloc',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        BinaryOp(\n                          op='*',\n                          left=\n                            UnaryOp(\n                              op='sizeof',\n                              expr=\n                                Typename(\n                                  name=None,\n                                  quals=[],\n                                  align=None,\n                                  type=\n                                    TypeDecl(\n                                      declname=None,\n                                      quals=[],\n                                      align=None,\n                                      type=\n                                        IdentifierType(\n                                          names=['char'],\n                                        )\n                                    )\n                                )\n                            )\n                          right=\n                            BinaryOp(\n                              op='+',\n                              left=\n                                FuncCall(\n                                  name=\n                                    ID(\n                                      name='strlen',\n                                    )\n                                  args=\n                                    ExprList(\n                                      exprs[0]=\n                                        ID(\n                                          name='nom',\n                                        )\n                                    )\n                                )\n                              right=\n                                Constant(\n                                  type='int',\n                                  value='1',\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        )\n      block_items[4]=\n        If(\n          cond=\n            BinaryOp(\n              op='==',\n              left=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='nouvel_etudiant',\n                    )\n                  field=\n                    ID(\n                      name='nom',\n                    )\n                )\n              right=\n                Constant(\n                  type='int',\n                  value='0',\n                )\n            )\n          iftrue=\n            Compound(\n              block_items[0]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='free',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        ID(\n                          name='nouvel_etudiant',\n                        )\n                    )\n                )\n              block_items[1]=\n                Return(\n                  expr=\n                    Constant(\n                      type='int',\n                      value='0',\n                    )\n                )\n            )\n        )\n      block_items[5]=\n        FuncCall(\n          name=\n            ID(\n              name='strcpy',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='nouvel_etudiant',\n                    )\n                  field=\n                    ID(\n                      name='nom',\n                    )\n                )\n              exprs[1]=\n                ID(\n                  name='nom',\n                )\n            )\n        )\n      block_items[6]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='->',\n              name=\n                ID(\n                  name='nouvel_etudiant',\n                )\n              field=\n                ID(\n                  name='prenom',\n                )\n            )\n          rvalue=\n            Cast(\n              to_type=\n                Typename(\n                  name=None,\n                  quals=[],\n                  align=None,\n                  type=\n                    PtrDecl(\n                      quals=[],\n                      type=\n                        TypeDecl(\n                          declname=None,\n                          quals=[],\n                          align=None,\n                          type=\n                            IdentifierType(\n                              names=['char'],\n                            )\n                        )\n                    )\n                )\n              expr=\n                FuncCall(\n                  name=\n                    ID(\n                      name='malloc',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        BinaryOp(\n                          op='*',\n                          left=\n                            UnaryOp(\n                              op='sizeof',\n                              expr=\n                                Typename(\n                                  name=None,\n                                  quals=[],\n                                  align=None,\n                                  type=\n                                    TypeDecl(\n                                      declname=None,\n                                      quals=[],\n                                      align=None,\n                                      type=\n                                        IdentifierType(\n                                          names=['char'],\n                                        )\n                                    )\n                                )\n                            )\n                          right=\n                            BinaryOp(\n                              op='+',\n                              left=\n                                FuncCall(\n                                  name=\n                                    ID(\n                                      name='strlen',\n                                    )\n                                  args=\n                                    ExprList(\n                                      exprs[0]=\n                                        ID(\n                                          name='prenom',\n                                        )\n                                    )\n                                )\n                              right=\n                                Constant(\n                                  type='int',\n                                  value='1',\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        )\n      block_items[7]=\n        If(\n          cond=\n            BinaryOp(\n              op='==',\n              left=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='nouvel_etudiant',\n                    )\n                  field=\n                    ID(\n                      name='prenom',\n                    )\n                )\n              right=\n                Constant(\n                  type='int',\n                  value='0',\n                )\n            )\n          iftrue=\n            Compound(\n              block_items[0]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='free',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        StructRef(\n                          type='->',\n                          name=\n                            ID(\n                              name='nouvel_etudiant',\n                            )\n                          field=\n                            ID(\n                              name='nom',\n                            )\n                        )\n                    )\n                )\n              block_items[1]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='free',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        ID(\n                          name='nouvel_etudiant',\n                        )\n                    )\n                )\n              block_items[2]=\n                Return(\n                  expr=\n                    Constant(\n                      type='int',\n                      value='0',\n                    )\n                )\n            )\n        )\n      block_items[8]=\n        FuncCall(\n          name=\n            ID(\n              name='strcpy',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='nouvel_etudiant',\n                    )\n                  field=\n                    ID(\n                      name='prenom',\n                    )\n                )\n              exprs[1]=\n                ID(\n                  name='prenom',\n                )\n            )\n        )\n      block_items[9]=\n        Return(\n          expr=\n            ID(\n              name='nouvel_etudiant',\n            )\n        )\n    )\n)"
        },
        {
            "function_name": "main",
            "function_code": "int main() {\n    t_etudiant* e1;\n\n    e1 = t_etudiant_init(\"Baggins\", \"Bilbo\");\n\n    strcpy(e1->code_perm, \"BAGB00000000\");\n    e1->intra = 75;\n    e1->finale = 86.5;\n    e1->tp1 = 80;\n    e1->tp2 = 85;\n\n    t_etudiant_afficher(e1);\n\n    return 0;\n}",
            "function_ast": "FuncDef(\n  decl=\n    Decl(\n      name='main',\n      quals=[],\n      align=[],\n      storage=[],\n      funcspec=[],\n      type=\n        FuncDecl(\n          type=\n            TypeDecl(\n              declname='main',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['int'],\n                )\n            )\n        )\n    )\n  body=\n    Compound(\n      block_items[0]=\n        Decl(\n          name='e1',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            PtrDecl(\n              quals=[],\n              type=\n                TypeDecl(\n                  declname='e1',\n                  quals=[],\n                  align=None,\n                  type=\n                    IdentifierType(\n                      names=['t_etudiant'],\n                    )\n                )\n            )\n        )\n      block_items[1]=\n        Assignment(\n          op='=',\n          lvalue=\n            ID(\n              name='e1',\n            )\n          rvalue=\n            FuncCall(\n              name=\n                ID(\n                  name='t_etudiant_init',\n                )\n              args=\n                ExprList(\n                  exprs[0]=\n                    Constant(\n                      type='string',\n                      value='\"Baggins\"',\n                    )\n                  exprs[1]=\n                    Constant(\n                      type='string',\n                      value='\"Bilbo\"',\n                    )\n                )\n            )\n        )\n      block_items[2]=\n        FuncCall(\n          name=\n            ID(\n              name='strcpy',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='e1',\n                    )\n                  field=\n                    ID(\n                      name='code_perm',\n                    )\n                )\n              exprs[1]=\n                Constant(\n                  type='string',\n                  value='\"BAGB00000000\"',\n                )\n            )\n        )\n      block_items[3]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='->',\n              name=\n                ID(\n                  name='e1',\n                )\n              field=\n                ID(\n                  name='intra',\n                )\n            )\n          rvalue=\n            Constant(\n              type='int',\n              value='75',\n            )\n        )\n      block_items[4]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='->',\n              name=\n                ID(\n                  name='e1',\n                )\n              field=\n                ID(\n                  name='finale',\n                )\n            )\n          rvalue=\n            Constant(\n              type='double',\n              value='86.5',\n            )\n        )\n      block_items[5]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='->',\n              name=\n                ID(\n                  name='e1',\n                )\n              field=\n                ID(\n                  name='tp1',\n                )\n            )\n          rvalue=\n            Constant(\n              type='int',\n              value='80',\n            )\n        )\n      block_items[6]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='->',\n              name=\n                ID(\n                  name='e1',\n                )\n              field=\n                ID(\n                  name='tp2',\n                )\n            )\n          rvalue=\n            Constant(\n              type='int',\n              value='85',\n            )\n        )\n      block_items[7]=\n        FuncCall(\n          name=\n            ID(\n              name='t_etudiant_afficher',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                ID(\n                  name='e1',\n                )\n            )\n        )\n      block_items[8]=\n        Return(\n          expr=\n            Constant(\n              type='int',\n              value='0',\n            )\n        )\n    )\n)"
        }
    ]
}