{
    "project_name": "20223_01_01_premier_prog",
    "functions": [
        {
            "function_name": "main",
            "function_code": "\tint main(void)\n\t{\n\n\t\tchar operation = '/';\t \n\t\tint operande_1 = 5;\t\t \n\t\tint operande_2 = 10;\t \n\t\tdouble resultat;\t\t \n\n\t\t \n\t\tint est_operation_valide = 1;\n\n\t\t \n\t\tif (operation == '+')\n\t\t{\n\t\t\tresultat = (double)operande_1 + operande_2;\n\t\t}",
            "function_ast": "FuncDef(\n  decl=\n    Decl(\n      name='main',\n      quals=[],\n      align=[],\n      storage=[],\n      funcspec=[],\n      type=\n        FuncDecl(\n          args=\n            ParamList(\n              params[0]=\n                Typename(\n                  name=None,\n                  quals=[],\n                  align=None,\n                  type=\n                    TypeDecl(\n                      declname=None,\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['void'],\n                        )\n                    )\n                )\n            )\n          type=\n            TypeDecl(\n              declname='main',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['int'],\n                )\n            )\n        )\n    )\n  body=\n    Compound(\n      block_items[0]=\n        Decl(\n          name='operation',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            TypeDecl(\n              declname='operation',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['char'],\n                )\n            )\n          init=\n            Constant(\n              type='char',\n              value=\"'/'\",\n            )\n        )\n      block_items[1]=\n        Decl(\n          name='operande_1',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            TypeDecl(\n              declname='operande_1',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['int'],\n                )\n            )\n          init=\n            Constant(\n              type='int',\n              value='5',\n            )\n        )\n      block_items[2]=\n        Decl(\n          name='operande_2',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            TypeDecl(\n              declname='operande_2',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['int'],\n                )\n            )\n          init=\n            Constant(\n              type='int',\n              value='10',\n            )\n        )\n      block_items[3]=\n        Decl(\n          name='resultat',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            TypeDecl(\n              declname='resultat',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['double'],\n                )\n            )\n        )\n      block_items[4]=\n        Decl(\n          name='est_operation_valide',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            TypeDecl(\n              declname='est_operation_valide',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['int'],\n                )\n            )\n          init=\n            Constant(\n              type='int',\n              value='1',\n            )\n        )\n      block_items[5]=\n        If(\n          cond=\n            BinaryOp(\n              op='==',\n              left=\n                ID(\n                  name='operation',\n                )\n              right=\n                Constant(\n                  type='char',\n                  value=\"'+'\",\n                )\n            )\n          iftrue=\n            Compound(\n              block_items[0]=\n                Assignment(\n                  op='=',\n                  lvalue=\n                    ID(\n                      name='resultat',\n                    )\n                  rvalue=\n                    BinaryOp(\n                      op='+',\n                      left=\n                        Cast(\n                          to_type=\n                            Typename(\n                              name=None,\n                              quals=[],\n                              align=None,\n                              type=\n                                TypeDecl(\n                                  declname=None,\n                                  quals=[],\n                                  align=None,\n                                  type=\n                                    IdentifierType(\n                                      names=['double'],\n                                    )\n                                )\n                            )\n                          expr=\n                            ID(\n                              name='operande_1',\n                            )\n                        )\n                      right=\n                        ID(\n                          name='operande_2',\n                        )\n                    )\n                )\n            )\n          iffalse=\n            If(\n              cond=\n                BinaryOp(\n                  op='==',\n                  left=\n                    ID(\n                      name='operation',\n                    )\n                  right=\n                    ID(\n                      name='SOUSTRACTION',\n                    )\n                )\n              iftrue=\n                Compound(\n                  block_items[0]=\n                    Assignment(\n                      op='=',\n                      lvalue=\n                        ID(\n                          name='resultat',\n                        )\n                      rvalue=\n                        BinaryOp(\n                          op='-',\n                          left=\n                            Cast(\n                              to_type=\n                                Typename(\n                                  name=None,\n                                  quals=[],\n                                  align=None,\n                                  type=\n                                    TypeDecl(\n                                      declname=None,\n                                      quals=[],\n                                      align=None,\n                                      type=\n                                        IdentifierType(\n                                          names=['double'],\n                                        )\n                                    )\n                                )\n                              expr=\n                                ID(\n                                  name='operande_1',\n                                )\n                            )\n                          right=\n                            ID(\n                              name='operande_2',\n                            )\n                        )\n                    )\n                )\n              iffalse=\n                If(\n                  cond=\n                    BinaryOp(\n                      op='==',\n                      left=\n                        ID(\n                          name='operation',\n                        )\n                      right=\n                        Constant(\n                          type='char',\n                          value=\"'*'\",\n                        )\n                    )\n                  iftrue=\n                    Compound(\n                      block_items[0]=\n                        Assignment(\n                          op='=',\n                          lvalue=\n                            ID(\n                              name='resultat',\n                            )\n                          rvalue=\n                            BinaryOp(\n                              op='*',\n                              left=\n                                Cast(\n                                  to_type=\n                                    Typename(\n                                      name=None,\n                                      quals=[],\n                                      align=None,\n                                      type=\n                                        TypeDecl(\n                                          declname=None,\n                                          quals=[],\n                                          align=None,\n                                          type=\n                                            IdentifierType(\n                                              names=['double'],\n                                            )\n                                        )\n                                    )\n                                  expr=\n                                    ID(\n                                      name='operande_1',\n                                    )\n                                )\n                              right=\n                                ID(\n                                  name='operande_2',\n                                )\n                            )\n                        )\n                    )\n                  iffalse=\n                    If(\n                      cond=\n                        BinaryOp(\n                          op='==',\n                          left=\n                            ID(\n                              name='operation',\n                            )\n                          right=\n                            ID(\n                              name='DIVISION',\n                            )\n                        )\n                      iftrue=\n                        Compound(\n                          block_items[0]=\n                            Assignment(\n                              op='=',\n                              lvalue=\n                                ID(\n                                  name='resultat',\n                                )\n                              rvalue=\n                                BinaryOp(\n                                  op='/',\n                                  left=\n                                    Cast(\n                                      to_type=\n                                        Typename(\n                                          name=None,\n                                          quals=[],\n                                          align=None,\n                                          type=\n                                            TypeDecl(\n                                              declname=None,\n                                              quals=[],\n                                              align=None,\n                                              type=\n                                                IdentifierType(\n                                                  names=['double'],\n                                                )\n                                            )\n                                        )\n                                      expr=\n                                        ID(\n                                          name='operande_1',\n                                        )\n                                    )\n                                  right=\n                                    ID(\n                                      name='operande_2',\n                                    )\n                                )\n                            )\n                        )\n                      iffalse=\n                        Compound(\n                          block_items[0]=\n                            Assignment(\n                              op='=',\n                              lvalue=\n                                ID(\n                                  name='est_operation_valide',\n                                )\n                              rvalue=\n                                ID(\n                                  name='FAUX',\n                                )\n                            )\n                          block_items[1]=\n                            FuncCall(\n                              name=\n                                ID(\n                                  name='printf',\n                                )\n                              args=\n                                ExprList(\n                                  exprs[0]=\n                                    Constant(\n                                      type='string',\n                                      value='\"Operateur non valide!\\\\n\\\\n\"',\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        )\n      block_items[6]=\n        If(\n          cond=\n            ID(\n              name='est_operation_valide',\n            )\n          iftrue=\n            Compound(\n              block_items[0]=\n                If(\n                  cond=\n                    BinaryOp(\n                      op='==',\n                      left=\n                        ID(\n                          name='operation',\n                        )\n                      right=\n                        ID(\n                          name='DIVISION',\n                        )\n                    )\n                  iftrue=\n                    Compound(\n                      block_items[0]=\n                        FuncCall(\n                          name=\n                            ID(\n                              name='printf',\n                            )\n                          args=\n                            ExprList(\n                              exprs[0]=\n                                Constant(\n                                  type='string',\n                                  value='\"%i %c %i = %lf\\\\n\\\\n\"',\n                                )\n                              exprs[1]=\n                                ID(\n                                  name='operande_1',\n                                )\n                              exprs[2]=\n                                ID(\n                                  name='operation',\n                                )\n                              exprs[3]=\n                                ID(\n                                  name='operande_2',\n                                )\n                              exprs[4]=\n                                ID(\n                                  name='resultat',\n                                )\n                            )\n                        )\n                    )\n                  iffalse=\n                    Compound(\n                      block_items[0]=\n                        FuncCall(\n                          name=\n                            ID(\n                              name='printf',\n                            )\n                          args=\n                            ExprList(\n                              exprs[0]=\n                                Constant(\n                                  type='string',\n                                  value='\"%i %c %i = %.0lf\\\\n\\\\n\"',\n                                )\n                              exprs[1]=\n                                ID(\n                                  name='operande_1',\n                                )\n                              exprs[2]=\n                                ID(\n                                  name='operation',\n                                )\n                              exprs[3]=\n                                ID(\n                                  name='operande_2',\n                                )\n                              exprs[4]=\n                                ID(\n                                  name='resultat',\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        )\n      block_items[7]=\n        FuncCall(\n          name=\n            ID(\n              name='system',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                Constant(\n                  type='string',\n                  value='\"pause\"',\n                )\n            )\n        )\n      block_items[8]=\n        Return(\n          expr=\n            Constant(\n              type='int',\n              value='0',\n            )\n        )\n    )\n)"
        }
    ]
}