{
    "project_name": "20233_02_22_Tabs2D",
    "functions": [
        {
            "function_name": "main",
            "function_code": "int main(void) {\n    int nb_lignes, nb_colonnes;\n    double temperatures[10][20] = {\n            {32, 31.5, 30, 28},\n            {15, 16.5, 17, 14},\n            {20, 23.5, 18}",
            "function_ast": "FuncDef(\n  decl=\n    Decl(\n      name='main',\n      quals=[],\n      align=[],\n      storage=[],\n      funcspec=[],\n      type=\n        FuncDecl(\n          args=\n            ParamList(\n              params[0]=\n                Typename(\n                  name=None,\n                  quals=[],\n                  align=None,\n                  type=\n                    TypeDecl(\n                      declname=None,\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['void'],\n                        )\n                    )\n                )\n            )\n          type=\n            TypeDecl(\n              declname='main',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['int'],\n                )\n            )\n        )\n    )\n  body=\n    Compound(\n      block_items[0]=\n        Decl(\n          name='nb_lignes',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            TypeDecl(\n              declname='nb_lignes',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['int'],\n                )\n            )\n        )\n      block_items[1]=\n        Decl(\n          name='nb_colonnes',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            TypeDecl(\n              declname='nb_colonnes',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['int'],\n                )\n            )\n        )\n      block_items[2]=\n        Decl(\n          name='temperatures',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            ArrayDecl(\n              dim_quals=[],\n              type=\n                ArrayDecl(\n                  dim_quals=[],\n                  type=\n                    TypeDecl(\n                      declname='temperatures',\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['double'],\n                        )\n                    )\n                  dim=\n                    Constant(\n                      type='int',\n                      value='20',\n                    )\n                )\n              dim=\n                Constant(\n                  type='int',\n                  value='10',\n                )\n            )\n          init=\n            InitList(\n              exprs[0]=\n                InitList(\n                  exprs[0]=\n                    Constant(\n                      type='int',\n                      value='32',\n                    )\n                  exprs[1]=\n                    Constant(\n                      type='double',\n                      value='31.5',\n                    )\n                  exprs[2]=\n                    Constant(\n                      type='int',\n                      value='30',\n                    )\n                  exprs[3]=\n                    Constant(\n                      type='int',\n                      value='28',\n                    )\n                )\n              exprs[1]=\n                InitList(\n                  exprs[0]=\n                    Constant(\n                      type='int',\n                      value='15',\n                    )\n                  exprs[1]=\n                    Constant(\n                      type='double',\n                      value='16.5',\n                    )\n                  exprs[2]=\n                    Constant(\n                      type='int',\n                      value='17',\n                    )\n                  exprs[3]=\n                    Constant(\n                      type='int',\n                      value='14',\n                    )\n                )\n              exprs[2]=\n                InitList(\n                  exprs[0]=\n                    Constant(\n                      type='int',\n                      value='20',\n                    )\n                  exprs[1]=\n                    Constant(\n                      type='double',\n                      value='23.5',\n                    )\n                  exprs[2]=\n                    Constant(\n                      type='int',\n                      value='18',\n                    )\n                )\n            )\n        )\n      block_items[3]=\n        Assignment(\n          op='=',\n          lvalue=\n            ID(\n              name='nb_lignes',\n            )\n          rvalue=\n            Constant(\n              type='int',\n              value='3',\n            )\n        )\n      block_items[4]=\n        Assignment(\n          op='=',\n          lvalue=\n            ID(\n              name='nb_colonnes',\n            )\n          rvalue=\n            Constant(\n              type='int',\n              value='4',\n            )\n        )\n      block_items[5]=\n        Assignment(\n          op='=',\n          lvalue=\n            ArrayRef(\n              name=\n                ArrayRef(\n                  name=\n                    ID(\n                      name='temperatures',\n                    )\n                  subscript=\n                    Constant(\n                      type='int',\n                      value='2',\n                    )\n                )\n              subscript=\n                Constant(\n                  type='int',\n                  value='1',\n                )\n            )\n          rvalue=\n            Constant(\n              type='double',\n              value='23.5',\n            )\n        )\n      block_items[6]=\n        FuncCall(\n          name=\n            ID(\n              name='printf',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                Constant(\n                  type='string',\n                  value='\"La case 2,1 contient: %lf\\\\n\"',\n                )\n              exprs[1]=\n                ArrayRef(\n                  name=\n                    ArrayRef(\n                      name=\n                        ID(\n                          name='temperatures',\n                        )\n                      subscript=\n                        Constant(\n                          type='int',\n                          value='2',\n                        )\n                    )\n                  subscript=\n                    Constant(\n                      type='int',\n                      value='1',\n                    )\n                )\n            )\n        )\n      block_items[7]=\n        FuncCall(\n          name=\n            ID(\n              name='afficher_tab2d',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                ID(\n                  name='temperatures',\n                )\n              exprs[1]=\n                ID(\n                  name='nb_lignes',\n                )\n              exprs[2]=\n                ID(\n                  name='nb_colonnes',\n                )\n            )\n        )\n      block_items[8]=\n        FuncCall(\n          name=\n            ID(\n              name='printf',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                Constant(\n                  type='string',\n                  value='\"Moyenne: %.2lf\"',\n                )\n              exprs[1]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='moyenne_tab2d',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        ID(\n                          name='temperatures',\n                        )\n                      exprs[1]=\n                        ID(\n                          name='nb_lignes',\n                        )\n                      exprs[2]=\n                        ID(\n                          name='nb_colonnes',\n                        )\n                    )\n                )\n            )\n        )\n      block_items[9]=\n        Return(\n          expr=\n            Constant(\n              type='int',\n              value='0',\n            )\n        )\n    )\n)"
        },
        {
            "function_name": "afficher_tab2d",
            "function_code": "void afficher_tab2d(double tab[][20], int nb_lignes, int nb_colonnes)\n{\n    for(int i=0; i < nb_lignes ; i++)\n    {\n        for(int j=0; j< nb_colonnes; j++)\n        {\n            printf(\"%.2lf\\t\", tab[i][j]);\n        }",
            "function_ast": "FuncDef(\n  decl=\n    Decl(\n      name='afficher_tab2d',\n      quals=[],\n      align=[],\n      storage=[],\n      funcspec=[],\n      type=\n        FuncDecl(\n          args=\n            ParamList(\n              params[0]=\n                Decl(\n                  name='tab',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    ArrayDecl(\n                      dim_quals=[],\n                      type=\n                        ArrayDecl(\n                          dim_quals=[],\n                          type=\n                            TypeDecl(\n                              declname='tab',\n                              quals=[],\n                              align=None,\n                              type=\n                                IdentifierType(\n                                  names=['double'],\n                                )\n                            )\n                          dim=\n                            Constant(\n                              type='int',\n                              value='20',\n                            )\n                        )\n                    )\n                )\n              params[1]=\n                Decl(\n                  name='nb_lignes',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    TypeDecl(\n                      declname='nb_lignes',\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['int'],\n                        )\n                    )\n                )\n              params[2]=\n                Decl(\n                  name='nb_colonnes',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    TypeDecl(\n                      declname='nb_colonnes',\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['int'],\n                        )\n                    )\n                )\n            )\n          type=\n            TypeDecl(\n              declname='afficher_tab2d',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['void'],\n                )\n            )\n        )\n    )\n  body=\n    Compound(\n      block_items[0]=\n        For(\n          init=\n            DeclList(\n              decls[0]=\n                Decl(\n                  name='i',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    TypeDecl(\n                      declname='i',\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['int'],\n                        )\n                    )\n                  init=\n                    Constant(\n                      type='int',\n                      value='0',\n                    )\n                )\n            )\n          cond=\n            BinaryOp(\n              op='<',\n              left=\n                ID(\n                  name='i',\n                )\n              right=\n                ID(\n                  name='nb_lignes',\n                )\n            )\n          next=\n            UnaryOp(\n              op='p++',\n              expr=\n                ID(\n                  name='i',\n                )\n            )\n          stmt=\n            Compound(\n              block_items[0]=\n                For(\n                  init=\n                    DeclList(\n                      decls[0]=\n                        Decl(\n                          name='j',\n                          quals=[],\n                          align=[],\n                          storage=[],\n                          funcspec=[],\n                          type=\n                            TypeDecl(\n                              declname='j',\n                              quals=[],\n                              align=None,\n                              type=\n                                IdentifierType(\n                                  names=['int'],\n                                )\n                            )\n                          init=\n                            Constant(\n                              type='int',\n                              value='0',\n                            )\n                        )\n                    )\n                  cond=\n                    BinaryOp(\n                      op='<',\n                      left=\n                        ID(\n                          name='j',\n                        )\n                      right=\n                        ID(\n                          name='nb_colonnes',\n                        )\n                    )\n                  next=\n                    UnaryOp(\n                      op='p++',\n                      expr=\n                        ID(\n                          name='j',\n                        )\n                    )\n                  stmt=\n                    Compound(\n                      block_items[0]=\n                        FuncCall(\n                          name=\n                            ID(\n                              name='printf',\n                            )\n                          args=\n                            ExprList(\n                              exprs[0]=\n                                Constant(\n                                  type='string',\n                                  value='\"%.2lf\\\\t\"',\n                                )\n                              exprs[1]=\n                                ArrayRef(\n                                  name=\n                                    ArrayRef(\n                                      name=\n                                        ID(\n                                          name='tab',\n                                        )\n                                      subscript=\n                                        ID(\n                                          name='i',\n                                        )\n                                    )\n                                  subscript=\n                                    ID(\n                                      name='j',\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n              block_items[1]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='printf',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        Constant(\n                          type='string',\n                          value='\"\\\\n\"',\n                        )\n                    )\n                )\n            )\n        )\n    )\n)"
        },
        {
            "function_name": "moyenne_tab2d",
            "function_code": "double moyenne_tab2d(double tab[][20], int nb_lignes, int nb_colonnes)\n{\n    double somme = 0 ;\n\n    for(int i=0; i< nb_lignes; i++)\n    {\n        for(int j =0 ; j<nb_colonnes ; j++)\n        {\n            somme += tab[i][j];\n        }",
            "function_ast": "FuncDef(\n  decl=\n    Decl(\n      name='moyenne_tab2d',\n      quals=[],\n      align=[],\n      storage=[],\n      funcspec=[],\n      type=\n        FuncDecl(\n          args=\n            ParamList(\n              params[0]=\n                Decl(\n                  name='tab',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    ArrayDecl(\n                      dim_quals=[],\n                      type=\n                        ArrayDecl(\n                          dim_quals=[],\n                          type=\n                            TypeDecl(\n                              declname='tab',\n                              quals=[],\n                              align=None,\n                              type=\n                                IdentifierType(\n                                  names=['double'],\n                                )\n                            )\n                          dim=\n                            Constant(\n                              type='int',\n                              value='20',\n                            )\n                        )\n                    )\n                )\n              params[1]=\n                Decl(\n                  name='nb_lignes',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    TypeDecl(\n                      declname='nb_lignes',\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['int'],\n                        )\n                    )\n                )\n              params[2]=\n                Decl(\n                  name='nb_colonnes',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    TypeDecl(\n                      declname='nb_colonnes',\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['int'],\n                        )\n                    )\n                )\n            )\n          type=\n            TypeDecl(\n              declname='moyenne_tab2d',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['double'],\n                )\n            )\n        )\n    )\n  body=\n    Compound(\n      block_items[0]=\n        Decl(\n          name='somme',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            TypeDecl(\n              declname='somme',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['double'],\n                )\n            )\n          init=\n            Constant(\n              type='int',\n              value='0',\n            )\n        )\n      block_items[1]=\n        For(\n          init=\n            DeclList(\n              decls[0]=\n                Decl(\n                  name='i',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    TypeDecl(\n                      declname='i',\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['int'],\n                        )\n                    )\n                  init=\n                    Constant(\n                      type='int',\n                      value='0',\n                    )\n                )\n            )\n          cond=\n            BinaryOp(\n              op='<',\n              left=\n                ID(\n                  name='i',\n                )\n              right=\n                ID(\n                  name='nb_lignes',\n                )\n            )\n          next=\n            UnaryOp(\n              op='p++',\n              expr=\n                ID(\n                  name='i',\n                )\n            )\n          stmt=\n            Compound(\n              block_items[0]=\n                For(\n                  init=\n                    DeclList(\n                      decls[0]=\n                        Decl(\n                          name='j',\n                          quals=[],\n                          align=[],\n                          storage=[],\n                          funcspec=[],\n                          type=\n                            TypeDecl(\n                              declname='j',\n                              quals=[],\n                              align=None,\n                              type=\n                                IdentifierType(\n                                  names=['int'],\n                                )\n                            )\n                          init=\n                            Constant(\n                              type='int',\n                              value='0',\n                            )\n                        )\n                    )\n                  cond=\n                    BinaryOp(\n                      op='<',\n                      left=\n                        ID(\n                          name='j',\n                        )\n                      right=\n                        ID(\n                          name='nb_colonnes',\n                        )\n                    )\n                  next=\n                    UnaryOp(\n                      op='p++',\n                      expr=\n                        ID(\n                          name='j',\n                        )\n                    )\n                  stmt=\n                    Compound(\n                      block_items[0]=\n                        Assignment(\n                          op='+=',\n                          lvalue=\n                            ID(\n                              name='somme',\n                            )\n                          rvalue=\n                            ArrayRef(\n                              name=\n                                ArrayRef(\n                                  name=\n                                    ID(\n                                      name='tab',\n                                    )\n                                  subscript=\n                                    ID(\n                                      name='i',\n                                    )\n                                )\n                              subscript=\n                                ID(\n                                  name='j',\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        )\n      block_items[2]=\n        Return(\n          expr=\n            BinaryOp(\n              op='/',\n              left=\n                ID(\n                  name='somme',\n                )\n              right=\n                BinaryOp(\n                  op='*',\n                  left=\n                    ID(\n                      name='nb_lignes',\n                    )\n                  right=\n                    ID(\n                      name='nb_colonnes',\n                    )\n                )\n            )\n        )\n    )\n)"
        },
        {
            "function_name": "temperature_excedant",
            "function_code": "int temperature_excedant(double tab[][20],\n                         int nb_lignes,\n                         int nb_colonnes,\n                         double temp_seuil)\n{\n    int nb_excedant = 0;\n\n    for(int i=0; i<nb_lignes; i++)\n    {\n        for(int j=0; j<nb_colonnes; j++)\n        {\n            if(tab[i][j]>temp_seuil)\n            {\n                nb_excedant++;\n            }",
            "function_ast": "FuncDef(\n  decl=\n    Decl(\n      name='temperature_excedant',\n      quals=[],\n      align=[],\n      storage=[],\n      funcspec=[],\n      type=\n        FuncDecl(\n          args=\n            ParamList(\n              params[0]=\n                Decl(\n                  name='tab',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    ArrayDecl(\n                      dim_quals=[],\n                      type=\n                        ArrayDecl(\n                          dim_quals=[],\n                          type=\n                            TypeDecl(\n                              declname='tab',\n                              quals=[],\n                              align=None,\n                              type=\n                                IdentifierType(\n                                  names=['double'],\n                                )\n                            )\n                          dim=\n                            Constant(\n                              type='int',\n                              value='20',\n                            )\n                        )\n                    )\n                )\n              params[1]=\n                Decl(\n                  name='nb_lignes',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    TypeDecl(\n                      declname='nb_lignes',\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['int'],\n                        )\n                    )\n                )\n              params[2]=\n                Decl(\n                  name='nb_colonnes',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    TypeDecl(\n                      declname='nb_colonnes',\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['int'],\n                        )\n                    )\n                )\n              params[3]=\n                Decl(\n                  name='temp_seuil',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    TypeDecl(\n                      declname='temp_seuil',\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['double'],\n                        )\n                    )\n                )\n            )\n          type=\n            TypeDecl(\n              declname='temperature_excedant',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['int'],\n                )\n            )\n        )\n    )\n  body=\n    Compound(\n      block_items[0]=\n        Decl(\n          name='nb_excedant',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            TypeDecl(\n              declname='nb_excedant',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['int'],\n                )\n            )\n          init=\n            Constant(\n              type='int',\n              value='0',\n            )\n        )\n      block_items[1]=\n        For(\n          init=\n            DeclList(\n              decls[0]=\n                Decl(\n                  name='i',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    TypeDecl(\n                      declname='i',\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['int'],\n                        )\n                    )\n                  init=\n                    Constant(\n                      type='int',\n                      value='0',\n                    )\n                )\n            )\n          cond=\n            BinaryOp(\n              op='<',\n              left=\n                ID(\n                  name='i',\n                )\n              right=\n                ID(\n                  name='nb_lignes',\n                )\n            )\n          next=\n            UnaryOp(\n              op='p++',\n              expr=\n                ID(\n                  name='i',\n                )\n            )\n          stmt=\n            Compound(\n              block_items[0]=\n                For(\n                  init=\n                    DeclList(\n                      decls[0]=\n                        Decl(\n                          name='j',\n                          quals=[],\n                          align=[],\n                          storage=[],\n                          funcspec=[],\n                          type=\n                            TypeDecl(\n                              declname='j',\n                              quals=[],\n                              align=None,\n                              type=\n                                IdentifierType(\n                                  names=['int'],\n                                )\n                            )\n                          init=\n                            Constant(\n                              type='int',\n                              value='0',\n                            )\n                        )\n                    )\n                  cond=\n                    BinaryOp(\n                      op='<',\n                      left=\n                        ID(\n                          name='j',\n                        )\n                      right=\n                        ID(\n                          name='nb_colonnes',\n                        )\n                    )\n                  next=\n                    UnaryOp(\n                      op='p++',\n                      expr=\n                        ID(\n                          name='j',\n                        )\n                    )\n                  stmt=\n                    Compound(\n                      block_items[0]=\n                        If(\n                          cond=\n                            BinaryOp(\n                              op='>',\n                              left=\n                                ArrayRef(\n                                  name=\n                                    ArrayRef(\n                                      name=\n                                        ID(\n                                          name='tab',\n                                        )\n                                      subscript=\n                                        ID(\n                                          name='i',\n                                        )\n                                    )\n                                  subscript=\n                                    ID(\n                                      name='j',\n                                    )\n                                )\n                              right=\n                                ID(\n                                  name='temp_seuil',\n                                )\n                            )\n                          iftrue=\n                            Compound(\n                              block_items[0]=\n                                UnaryOp(\n                                  op='p++',\n                                  expr=\n                                    ID(\n                                      name='nb_excedant',\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        )\n      block_items[2]=\n        Return(\n          expr=\n            ID(\n              name='nb_excedant',\n            )\n        )\n    )\n)"
        }
    ]
}