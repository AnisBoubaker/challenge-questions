{
    "project_name": "20233_02_37_Fichiers",
    "functions": [
        {
            "function_name": "main",
            "function_code": "int main() {\n    FILE* mon_fichier;\n    int caractere;\n    char chaine[1000];\n    char jour[20];\n    double temp_min, temp_max;\n\n    mon_fichier = fopen(\"../donnees.txt\", \"r\");\n    if(!mon_fichier)\n    {\n        printf(\"Erreur lors de l'ouverture\\n\");\n        exit(1);\n    }",
            "function_ast": "FuncDef(\n  decl=\n    Decl(\n      name='main',\n      quals=[],\n      align=[],\n      storage=[],\n      funcspec=[],\n      type=\n        FuncDecl(\n          type=\n            TypeDecl(\n              declname='main',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['int'],\n                )\n            )\n        )\n    )\n  body=\n    Compound(\n      block_items[0]=\n        Decl(\n          name='mon_fichier',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            PtrDecl(\n              quals=[],\n              type=\n                TypeDecl(\n                  declname='mon_fichier',\n                  quals=[],\n                  align=None,\n                  type=\n                    IdentifierType(\n                      names=['FILE'],\n                    )\n                )\n            )\n        )\n      block_items[1]=\n        Decl(\n          name='caractere',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            TypeDecl(\n              declname='caractere',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['int'],\n                )\n            )\n        )\n      block_items[2]=\n        Decl(\n          name='chaine',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            ArrayDecl(\n              dim_quals=[],\n              type=\n                TypeDecl(\n                  declname='chaine',\n                  quals=[],\n                  align=None,\n                  type=\n                    IdentifierType(\n                      names=['char'],\n                    )\n                )\n              dim=\n                Constant(\n                  type='int',\n                  value='1000',\n                )\n            )\n        )\n      block_items[3]=\n        Decl(\n          name='jour',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            ArrayDecl(\n              dim_quals=[],\n              type=\n                TypeDecl(\n                  declname='jour',\n                  quals=[],\n                  align=None,\n                  type=\n                    IdentifierType(\n                      names=['char'],\n                    )\n                )\n              dim=\n                Constant(\n                  type='int',\n                  value='20',\n                )\n            )\n        )\n      block_items[4]=\n        Decl(\n          name='temp_min',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            TypeDecl(\n              declname='temp_min',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['double'],\n                )\n            )\n        )\n      block_items[5]=\n        Decl(\n          name='temp_max',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            TypeDecl(\n              declname='temp_max',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['double'],\n                )\n            )\n        )\n      block_items[6]=\n        Assignment(\n          op='=',\n          lvalue=\n            ID(\n              name='mon_fichier',\n            )\n          rvalue=\n            FuncCall(\n              name=\n                ID(\n                  name='fopen',\n                )\n              args=\n                ExprList(\n                  exprs[0]=\n                    Constant(\n                      type='string',\n                      value='\"../donnees.txt\"',\n                    )\n                  exprs[1]=\n                    Constant(\n                      type='string',\n                      value='\"r\"',\n                    )\n                )\n            )\n        )\n      block_items[7]=\n        If(\n          cond=\n            UnaryOp(\n              op='!',\n              expr=\n                ID(\n                  name='mon_fichier',\n                )\n            )\n          iftrue=\n            Compound(\n              block_items[0]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='printf',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        Constant(\n                          type='string',\n                          value='\"Erreur lors de l\\'ouverture\\\\n\"',\n                        )\n                    )\n                )\n              block_items[1]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='exit',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        Constant(\n                          type='int',\n                          value='1',\n                        )\n                    )\n                )\n            )\n        )\n      block_items[8]=\n        While(\n          cond=\n            BinaryOp(\n              op='==',\n              left=\n                FuncCall(\n                  name=\n                    ID(\n                      name='fscanf',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        ID(\n                          name='mon_fichier',\n                        )\n                      exprs[1]=\n                        Constant(\n                          type='string',\n                          value='\"%s %lf %lf\"',\n                        )\n                      exprs[2]=\n                        ID(\n                          name='jour',\n                        )\n                      exprs[3]=\n                        UnaryOp(\n                          op='&',\n                          expr=\n                            ID(\n                              name='temp_min',\n                            )\n                        )\n                      exprs[4]=\n                        UnaryOp(\n                          op='&',\n                          expr=\n                            ID(\n                              name='temp_max',\n                            )\n                        )\n                    )\n                )\n              right=\n                Constant(\n                  type='int',\n                  value='3',\n                )\n            )\n          stmt=\n            Compound(\n              block_items[0]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='printf',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        Constant(\n                          type='string',\n                          value='\"Jour: %s, Temp. min: %.2lf, Temp. max:%.2lf\\\\n\"',\n                        )\n                      exprs[1]=\n                        ID(\n                          name='jour',\n                        )\n                      exprs[2]=\n                        ID(\n                          name='temp_min',\n                        )\n                      exprs[3]=\n                        ID(\n                          name='temp_max',\n                        )\n                    )\n                )\n            )\n        )\n      block_items[9]=\n        FuncCall(\n          name=\n            ID(\n              name='fclose',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                ID(\n                  name='mon_fichier',\n                )\n            )\n        )\n      block_items[10]=\n        Return(\n          expr=\n            Constant(\n              type='int',\n              value='0',\n            )\n        )\n    )\n)"
        }
    ]
}