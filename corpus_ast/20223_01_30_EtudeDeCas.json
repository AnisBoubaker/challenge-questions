{
    "project_name": "20223_01_30_EtudeDeCas",
    "functions": [
        {
            "function_name": "compte_init",
            "function_code": "t_compte* compte_init(void)\n{\n\tt_compte* nouv_compte;\n\n\tnouv_compte = (t_compte*)malloc(sizeof(t_compte));\n\tif (nouv_compte == 0)\n\t{\n\t\tprintf(\"ERREUR: Plus de m\u00e9moire\\n\");\n\t\texit(1);\n\t}",
            "function_ast": "FuncDef(\n  decl=\n    Decl(\n      name='compte_init',\n      quals=[],\n      align=[],\n      storage=[],\n      funcspec=[],\n      type=\n        FuncDecl(\n          args=\n            ParamList(\n              params[0]=\n                Typename(\n                  name=None,\n                  quals=[],\n                  align=None,\n                  type=\n                    TypeDecl(\n                      declname=None,\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['void'],\n                        )\n                    )\n                )\n            )\n          type=\n            PtrDecl(\n              quals=[],\n              type=\n                TypeDecl(\n                  declname='compte_init',\n                  quals=[],\n                  align=None,\n                  type=\n                    IdentifierType(\n                      names=['t_compte'],\n                    )\n                )\n            )\n        )\n    )\n  body=\n    Compound(\n      block_items[0]=\n        Decl(\n          name='nouv_compte',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            PtrDecl(\n              quals=[],\n              type=\n                TypeDecl(\n                  declname='nouv_compte',\n                  quals=[],\n                  align=None,\n                  type=\n                    IdentifierType(\n                      names=['t_compte'],\n                    )\n                )\n            )\n        )\n      block_items[1]=\n        Assignment(\n          op='=',\n          lvalue=\n            ID(\n              name='nouv_compte',\n            )\n          rvalue=\n            Cast(\n              to_type=\n                Typename(\n                  name=None,\n                  quals=[],\n                  align=None,\n                  type=\n                    PtrDecl(\n                      quals=[],\n                      type=\n                        TypeDecl(\n                          declname=None,\n                          quals=[],\n                          align=None,\n                          type=\n                            IdentifierType(\n                              names=['t_compte'],\n                            )\n                        )\n                    )\n                )\n              expr=\n                FuncCall(\n                  name=\n                    ID(\n                      name='malloc',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        UnaryOp(\n                          op='sizeof',\n                          expr=\n                            Typename(\n                              name=None,\n                              quals=[],\n                              align=None,\n                              type=\n                                TypeDecl(\n                                  declname=None,\n                                  quals=[],\n                                  align=None,\n                                  type=\n                                    IdentifierType(\n                                      names=['t_compte'],\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        )\n      block_items[2]=\n        If(\n          cond=\n            BinaryOp(\n              op='==',\n              left=\n                ID(\n                  name='nouv_compte',\n                )\n              right=\n                Constant(\n                  type='int',\n                  value='0',\n                )\n            )\n          iftrue=\n            Compound(\n              block_items[0]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='printf',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        Constant(\n                          type='string',\n                          value='\"ERREUR: Plus de m\u00e9moire\\\\n\"',\n                        )\n                    )\n                )\n              block_items[1]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='exit',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        Constant(\n                          type='int',\n                          value='1',\n                        )\n                    )\n                )\n            )\n        )\n      block_items[3]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='->',\n              name=\n                ID(\n                  name='nouv_compte',\n                )\n              field=\n                ID(\n                  name='solde',\n                )\n            )\n          rvalue=\n            Constant(\n              type='int',\n              value='0',\n            )\n        )\n      block_items[4]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='->',\n              name=\n                ID(\n                  name='nouv_compte',\n                )\n              field=\n                ID(\n                  name='taux_interets',\n                )\n            )\n          rvalue=\n            Constant(\n              type='int',\n              value='0',\n            )\n        )\n      block_items[5]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='->',\n              name=\n                ID(\n                  name='nouv_compte',\n                )\n              field=\n                ID(\n                  name='limite_decouvert',\n                )\n            )\n          rvalue=\n            Constant(\n              type='int',\n              value='0',\n            )\n        )\n      block_items[6]=\n        Assignment(\n          op='=',\n          lvalue=\n            ArrayRef(\n              name=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='nouv_compte',\n                    )\n                  field=\n                    ID(\n                      name='identifiant',\n                    )\n                )\n              subscript=\n                Constant(\n                  type='int',\n                  value='0',\n                )\n            )\n          rvalue=\n            Constant(\n              type='char',\n              value=\"'\\\\0'\",\n            )\n        )\n      block_items[7]=\n        Return(\n          expr=\n            ID(\n              name='nouv_compte',\n            )\n        )\n    )\n)"
        },
        {
            "function_name": "compte_destroy",
            "function_code": "void compte_destroy(t_compte* le_compte)\n{\n\tfree(le_compte);\n}",
            "function_ast": "FuncDef(\n  decl=\n    Decl(\n      name='compte_destroy',\n      quals=[],\n      align=[],\n      storage=[],\n      funcspec=[],\n      type=\n        FuncDecl(\n          args=\n            ParamList(\n              params[0]=\n                Decl(\n                  name='le_compte',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    PtrDecl(\n                      quals=[],\n                      type=\n                        TypeDecl(\n                          declname='le_compte',\n                          quals=[],\n                          align=None,\n                          type=\n                            IdentifierType(\n                              names=['t_compte'],\n                            )\n                        )\n                    )\n                )\n            )\n          type=\n            TypeDecl(\n              declname='compte_destroy',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['void'],\n                )\n            )\n        )\n    )\n  body=\n    Compound(\n      block_items[0]=\n        FuncCall(\n          name=\n            ID(\n              name='free',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                ID(\n                  name='le_compte',\n                )\n            )\n        )\n    )\n)"
        },
        {
            "function_name": "client_init",
            "function_code": "t_client* client_init(const char* num_ass_sociale, \n\tconst char* nom, \n\tconst char* prenom)\n{\n\tt_client* nouv_client;\n\n\tnouv_client = (t_client*)malloc(sizeof(t_client));\n\tif (nouv_client == 0)\n\t{\n\t\tprintf(\"ERREUR: Plus de memoire!\\n\");\n\t\texit(1);\n\t}",
            "function_ast": "FuncDef(\n  decl=\n    Decl(\n      name='client_init',\n      quals=[],\n      align=[],\n      storage=[],\n      funcspec=[],\n      type=\n        FuncDecl(\n          args=\n            ParamList(\n              params[0]=\n                Decl(\n                  name='num_ass_sociale',\n                  quals=['const'],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    PtrDecl(\n                      quals=[],\n                      type=\n                        TypeDecl(\n                          declname='num_ass_sociale',\n                          quals=['const'],\n                          align=None,\n                          type=\n                            IdentifierType(\n                              names=['char'],\n                            )\n                        )\n                    )\n                )\n              params[1]=\n                Decl(\n                  name='nom',\n                  quals=['const'],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    PtrDecl(\n                      quals=[],\n                      type=\n                        TypeDecl(\n                          declname='nom',\n                          quals=['const'],\n                          align=None,\n                          type=\n                            IdentifierType(\n                              names=['char'],\n                            )\n                        )\n                    )\n                )\n              params[2]=\n                Decl(\n                  name='prenom',\n                  quals=['const'],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    PtrDecl(\n                      quals=[],\n                      type=\n                        TypeDecl(\n                          declname='prenom',\n                          quals=['const'],\n                          align=None,\n                          type=\n                            IdentifierType(\n                              names=['char'],\n                            )\n                        )\n                    )\n                )\n            )\n          type=\n            PtrDecl(\n              quals=[],\n              type=\n                TypeDecl(\n                  declname='client_init',\n                  quals=[],\n                  align=None,\n                  type=\n                    IdentifierType(\n                      names=['t_client'],\n                    )\n                )\n            )\n        )\n    )\n  body=\n    Compound(\n      block_items[0]=\n        Decl(\n          name='nouv_client',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            PtrDecl(\n              quals=[],\n              type=\n                TypeDecl(\n                  declname='nouv_client',\n                  quals=[],\n                  align=None,\n                  type=\n                    IdentifierType(\n                      names=['t_client'],\n                    )\n                )\n            )\n        )\n      block_items[1]=\n        Assignment(\n          op='=',\n          lvalue=\n            ID(\n              name='nouv_client',\n            )\n          rvalue=\n            Cast(\n              to_type=\n                Typename(\n                  name=None,\n                  quals=[],\n                  align=None,\n                  type=\n                    PtrDecl(\n                      quals=[],\n                      type=\n                        TypeDecl(\n                          declname=None,\n                          quals=[],\n                          align=None,\n                          type=\n                            IdentifierType(\n                              names=['t_client'],\n                            )\n                        )\n                    )\n                )\n              expr=\n                FuncCall(\n                  name=\n                    ID(\n                      name='malloc',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        UnaryOp(\n                          op='sizeof',\n                          expr=\n                            Typename(\n                              name=None,\n                              quals=[],\n                              align=None,\n                              type=\n                                TypeDecl(\n                                  declname=None,\n                                  quals=[],\n                                  align=None,\n                                  type=\n                                    IdentifierType(\n                                      names=['t_client'],\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        )\n      block_items[2]=\n        If(\n          cond=\n            BinaryOp(\n              op='==',\n              left=\n                ID(\n                  name='nouv_client',\n                )\n              right=\n                Constant(\n                  type='int',\n                  value='0',\n                )\n            )\n          iftrue=\n            Compound(\n              block_items[0]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='printf',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        Constant(\n                          type='string',\n                          value='\"ERREUR: Plus de memoire!\\\\n\"',\n                        )\n                    )\n                )\n              block_items[1]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='exit',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        Constant(\n                          type='int',\n                          value='1',\n                        )\n                    )\n                )\n            )\n        )\n      block_items[3]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='->',\n              name=\n                ID(\n                  name='nouv_client',\n                )\n              field=\n                ID(\n                  name='nom',\n                )\n            )\n          rvalue=\n            Cast(\n              to_type=\n                Typename(\n                  name=None,\n                  quals=[],\n                  align=None,\n                  type=\n                    PtrDecl(\n                      quals=[],\n                      type=\n                        TypeDecl(\n                          declname=None,\n                          quals=[],\n                          align=None,\n                          type=\n                            IdentifierType(\n                              names=['char'],\n                            )\n                        )\n                    )\n                )\n              expr=\n                FuncCall(\n                  name=\n                    ID(\n                      name='malloc',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        BinaryOp(\n                          op='*',\n                          left=\n                            UnaryOp(\n                              op='sizeof',\n                              expr=\n                                Typename(\n                                  name=None,\n                                  quals=[],\n                                  align=None,\n                                  type=\n                                    TypeDecl(\n                                      declname=None,\n                                      quals=[],\n                                      align=None,\n                                      type=\n                                        IdentifierType(\n                                          names=['char'],\n                                        )\n                                    )\n                                )\n                            )\n                          right=\n                            BinaryOp(\n                              op='+',\n                              left=\n                                FuncCall(\n                                  name=\n                                    ID(\n                                      name='strlen',\n                                    )\n                                  args=\n                                    ExprList(\n                                      exprs[0]=\n                                        ID(\n                                          name='nom',\n                                        )\n                                    )\n                                )\n                              right=\n                                Constant(\n                                  type='int',\n                                  value='1',\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        )\n      block_items[4]=\n        If(\n          cond=\n            BinaryOp(\n              op='==',\n              left=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='nouv_client',\n                    )\n                  field=\n                    ID(\n                      name='nom',\n                    )\n                )\n              right=\n                Constant(\n                  type='int',\n                  value='0',\n                )\n            )\n          iftrue=\n            Compound(\n              block_items[0]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='free',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        ID(\n                          name='nouv_client',\n                        )\n                    )\n                )\n              block_items[1]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='printf',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        Constant(\n                          type='string',\n                          value='\"ERREUR: Plus de memoire!\\\\n\"',\n                        )\n                    )\n                )\n              block_items[2]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='exit',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        Constant(\n                          type='int',\n                          value='1',\n                        )\n                    )\n                )\n            )\n        )\n      block_items[5]=\n        FuncCall(\n          name=\n            ID(\n              name='strcpy',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='nouv_client',\n                    )\n                  field=\n                    ID(\n                      name='nom',\n                    )\n                )\n              exprs[1]=\n                ID(\n                  name='nom',\n                )\n            )\n        )\n      block_items[6]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='->',\n              name=\n                ID(\n                  name='nouv_client',\n                )\n              field=\n                ID(\n                  name='prenom',\n                )\n            )\n          rvalue=\n            Cast(\n              to_type=\n                Typename(\n                  name=None,\n                  quals=[],\n                  align=None,\n                  type=\n                    PtrDecl(\n                      quals=[],\n                      type=\n                        TypeDecl(\n                          declname=None,\n                          quals=[],\n                          align=None,\n                          type=\n                            IdentifierType(\n                              names=['char'],\n                            )\n                        )\n                    )\n                )\n              expr=\n                FuncCall(\n                  name=\n                    ID(\n                      name='malloc',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        BinaryOp(\n                          op='*',\n                          left=\n                            UnaryOp(\n                              op='sizeof',\n                              expr=\n                                Typename(\n                                  name=None,\n                                  quals=[],\n                                  align=None,\n                                  type=\n                                    TypeDecl(\n                                      declname=None,\n                                      quals=[],\n                                      align=None,\n                                      type=\n                                        IdentifierType(\n                                          names=['char'],\n                                        )\n                                    )\n                                )\n                            )\n                          right=\n                            BinaryOp(\n                              op='+',\n                              left=\n                                FuncCall(\n                                  name=\n                                    ID(\n                                      name='strlen',\n                                    )\n                                  args=\n                                    ExprList(\n                                      exprs[0]=\n                                        ID(\n                                          name='prenom',\n                                        )\n                                    )\n                                )\n                              right=\n                                Constant(\n                                  type='int',\n                                  value='1',\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        )\n      block_items[7]=\n        If(\n          cond=\n            BinaryOp(\n              op='==',\n              left=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='nouv_client',\n                    )\n                  field=\n                    ID(\n                      name='prenom',\n                    )\n                )\n              right=\n                Constant(\n                  type='int',\n                  value='0',\n                )\n            )\n          iftrue=\n            Compound(\n              block_items[0]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='free',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        StructRef(\n                          type='->',\n                          name=\n                            ID(\n                              name='nouv_client',\n                            )\n                          field=\n                            ID(\n                              name='nom',\n                            )\n                        )\n                    )\n                )\n              block_items[1]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='free',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        ID(\n                          name='nouv_client',\n                        )\n                    )\n                )\n              block_items[2]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='printf',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        Constant(\n                          type='string',\n                          value='\"ERREUR: Plus de memoire!\\\\n\"',\n                        )\n                    )\n                )\n              block_items[3]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='exit',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        Constant(\n                          type='int',\n                          value='1',\n                        )\n                    )\n                )\n            )\n        )\n      block_items[8]=\n        FuncCall(\n          name=\n            ID(\n              name='strcpy',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='nouv_client',\n                    )\n                  field=\n                    ID(\n                      name='prenom',\n                    )\n                )\n              exprs[1]=\n                ID(\n                  name='prenom',\n                )\n            )\n        )\n      block_items[9]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='->',\n              name=\n                ID(\n                  name='nouv_client',\n                )\n              field=\n                ID(\n                  name='comptes',\n                )\n            )\n          rvalue=\n            Constant(\n              type='int',\n              value='0',\n            )\n        )\n      block_items[10]=\n        FuncCall(\n          name=\n            ID(\n              name='strcpy',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='nouv_client',\n                    )\n                  field=\n                    ID(\n                      name='num_ass_sociale',\n                    )\n                )\n              exprs[1]=\n                ID(\n                  name='num_ass_sociale',\n                )\n            )\n        )\n      block_items[11]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='.',\n              name=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='nouv_client',\n                    )\n                  field=\n                    ID(\n                      name='date_naiss',\n                    )\n                )\n              field=\n                ID(\n                  name='jour',\n                )\n            )\n          rvalue=\n            Constant(\n              type='int',\n              value='0',\n            )\n        )\n      block_items[12]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='.',\n              name=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='nouv_client',\n                    )\n                  field=\n                    ID(\n                      name='date_naiss',\n                    )\n                )\n              field=\n                ID(\n                  name='mois',\n                )\n            )\n          rvalue=\n            Constant(\n              type='int',\n              value='0',\n            )\n        )\n      block_items[13]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='.',\n              name=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='nouv_client',\n                    )\n                  field=\n                    ID(\n                      name='date_naiss',\n                    )\n                )\n              field=\n                ID(\n                  name='annee',\n                )\n            )\n          rvalue=\n            Constant(\n              type='int',\n              value='0',\n            )\n        )\n      block_items[14]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='->',\n              name=\n                ID(\n                  name='nouv_client',\n                )\n              field=\n                ID(\n                  name='nb_comptes',\n                )\n            )\n          rvalue=\n            Constant(\n              type='int',\n              value='0',\n            )\n        )\n      block_items[15]=\n        Return(\n          expr=\n            ID(\n              name='nouv_client',\n            )\n        )\n    )\n)"
        },
        {
            "function_name": "client_destroy",
            "function_code": "void client_destroy(t_client* le_client)\n{\n\t \n\t \n\tfree(le_client->nom);\n\tfree(le_client->prenom);\n\tfree(le_client);\n}",
            "function_ast": "FuncDef(\n  decl=\n    Decl(\n      name='client_destroy',\n      quals=[],\n      align=[],\n      storage=[],\n      funcspec=[],\n      type=\n        FuncDecl(\n          args=\n            ParamList(\n              params[0]=\n                Decl(\n                  name='le_client',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    PtrDecl(\n                      quals=[],\n                      type=\n                        TypeDecl(\n                          declname='le_client',\n                          quals=[],\n                          align=None,\n                          type=\n                            IdentifierType(\n                              names=['t_client'],\n                            )\n                        )\n                    )\n                )\n            )\n          type=\n            TypeDecl(\n              declname='client_destroy',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['void'],\n                )\n            )\n        )\n    )\n  body=\n    Compound(\n      block_items[0]=\n        FuncCall(\n          name=\n            ID(\n              name='free',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='le_client',\n                    )\n                  field=\n                    ID(\n                      name='nom',\n                    )\n                )\n            )\n        )\n      block_items[1]=\n        FuncCall(\n          name=\n            ID(\n              name='free',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='le_client',\n                    )\n                  field=\n                    ID(\n                      name='prenom',\n                    )\n                )\n            )\n        )\n      block_items[2]=\n        FuncCall(\n          name=\n            ID(\n              name='free',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                ID(\n                  name='le_client',\n                )\n            )\n        )\n    )\n)"
        },
        {
            "function_name": "client_afficher",
            "function_code": "void client_afficher(const t_client* client)\n{\n\tprintf(\"FICHE DU CLIENT: \\n ---------------------\\n\");\n\tprintf(\"Num. Assurance sociale: %s\\n\", client->num_ass_sociale);\n\t \n\tprintf(\"Nom et prenom: %s, %s\\n\", client->nom, client->prenom);\n\tprintf(\"Date de naissance: %d/%d/%d\\n\",\n\t\tclient->date_naiss.jour,\n\t\tclient->date_naiss.mois,\n\t\tclient->date_naiss.annee);\n\tprintf(\"LISTE DES COMPTES:\\n\");\n\tfor (int i = 0; i < client->nb_comptes; i++)\n\t{\n\t\tprintf(\"\\tNum. Compte: %s\\n\", client->comptes[i]->identifiant);\n\t\tprintf(\"\\tSolde: %.2lf\\n\", client->comptes[i]->solde);\n\t\tprintf(\"\\tDecouvert autorise: %.2lf\\n\", client->comptes[i]->limite_decouvert);\n\t\tprintf(\"\\tTaux d'interets: %.2lf\\n\", client->comptes[i]->taux_interets);\n\t\tprintf(\"\\t--------------------------------\\n\");\n\t}",
            "function_ast": "FuncDef(\n  decl=\n    Decl(\n      name='client_afficher',\n      quals=[],\n      align=[],\n      storage=[],\n      funcspec=[],\n      type=\n        FuncDecl(\n          args=\n            ParamList(\n              params[0]=\n                Decl(\n                  name='client',\n                  quals=['const'],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    PtrDecl(\n                      quals=[],\n                      type=\n                        TypeDecl(\n                          declname='client',\n                          quals=['const'],\n                          align=None,\n                          type=\n                            IdentifierType(\n                              names=['t_client'],\n                            )\n                        )\n                    )\n                )\n            )\n          type=\n            TypeDecl(\n              declname='client_afficher',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['void'],\n                )\n            )\n        )\n    )\n  body=\n    Compound(\n      block_items[0]=\n        FuncCall(\n          name=\n            ID(\n              name='printf',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                Constant(\n                  type='string',\n                  value='\"FICHE DU CLIENT: \\\\n ---------------------\\\\n\"',\n                )\n            )\n        )\n      block_items[1]=\n        FuncCall(\n          name=\n            ID(\n              name='printf',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                Constant(\n                  type='string',\n                  value='\"Num. Assurance sociale: %s\\\\n\"',\n                )\n              exprs[1]=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='client',\n                    )\n                  field=\n                    ID(\n                      name='num_ass_sociale',\n                    )\n                )\n            )\n        )\n      block_items[2]=\n        FuncCall(\n          name=\n            ID(\n              name='printf',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                Constant(\n                  type='string',\n                  value='\"Nom et prenom: %s, %s\\\\n\"',\n                )\n              exprs[1]=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='client',\n                    )\n                  field=\n                    ID(\n                      name='nom',\n                    )\n                )\n              exprs[2]=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='client',\n                    )\n                  field=\n                    ID(\n                      name='prenom',\n                    )\n                )\n            )\n        )\n      block_items[3]=\n        FuncCall(\n          name=\n            ID(\n              name='printf',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                Constant(\n                  type='string',\n                  value='\"Date de naissance: %d/%d/%d\\\\n\"',\n                )\n              exprs[1]=\n                StructRef(\n                  type='.',\n                  name=\n                    StructRef(\n                      type='->',\n                      name=\n                        ID(\n                          name='client',\n                        )\n                      field=\n                        ID(\n                          name='date_naiss',\n                        )\n                    )\n                  field=\n                    ID(\n                      name='jour',\n                    )\n                )\n              exprs[2]=\n                StructRef(\n                  type='.',\n                  name=\n                    StructRef(\n                      type='->',\n                      name=\n                        ID(\n                          name='client',\n                        )\n                      field=\n                        ID(\n                          name='date_naiss',\n                        )\n                    )\n                  field=\n                    ID(\n                      name='mois',\n                    )\n                )\n              exprs[3]=\n                StructRef(\n                  type='.',\n                  name=\n                    StructRef(\n                      type='->',\n                      name=\n                        ID(\n                          name='client',\n                        )\n                      field=\n                        ID(\n                          name='date_naiss',\n                        )\n                    )\n                  field=\n                    ID(\n                      name='annee',\n                    )\n                )\n            )\n        )\n      block_items[4]=\n        FuncCall(\n          name=\n            ID(\n              name='printf',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                Constant(\n                  type='string',\n                  value='\"LISTE DES COMPTES:\\\\n\"',\n                )\n            )\n        )\n      block_items[5]=\n        For(\n          init=\n            DeclList(\n              decls[0]=\n                Decl(\n                  name='i',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    TypeDecl(\n                      declname='i',\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['int'],\n                        )\n                    )\n                  init=\n                    Constant(\n                      type='int',\n                      value='0',\n                    )\n                )\n            )\n          cond=\n            BinaryOp(\n              op='<',\n              left=\n                ID(\n                  name='i',\n                )\n              right=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='client',\n                    )\n                  field=\n                    ID(\n                      name='nb_comptes',\n                    )\n                )\n            )\n          next=\n            UnaryOp(\n              op='p++',\n              expr=\n                ID(\n                  name='i',\n                )\n            )\n          stmt=\n            Compound(\n              block_items[0]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='printf',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        Constant(\n                          type='string',\n                          value='\"\\\\tNum. Compte: %s\\\\n\"',\n                        )\n                      exprs[1]=\n                        StructRef(\n                          type='->',\n                          name=\n                            ArrayRef(\n                              name=\n                                StructRef(\n                                  type='->',\n                                  name=\n                                    ID(\n                                      name='client',\n                                    )\n                                  field=\n                                    ID(\n                                      name='comptes',\n                                    )\n                                )\n                              subscript=\n                                ID(\n                                  name='i',\n                                )\n                            )\n                          field=\n                            ID(\n                              name='identifiant',\n                            )\n                        )\n                    )\n                )\n              block_items[1]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='printf',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        Constant(\n                          type='string',\n                          value='\"\\\\tSolde: %.2lf\\\\n\"',\n                        )\n                      exprs[1]=\n                        StructRef(\n                          type='->',\n                          name=\n                            ArrayRef(\n                              name=\n                                StructRef(\n                                  type='->',\n                                  name=\n                                    ID(\n                                      name='client',\n                                    )\n                                  field=\n                                    ID(\n                                      name='comptes',\n                                    )\n                                )\n                              subscript=\n                                ID(\n                                  name='i',\n                                )\n                            )\n                          field=\n                            ID(\n                              name='solde',\n                            )\n                        )\n                    )\n                )\n              block_items[2]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='printf',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        Constant(\n                          type='string',\n                          value='\"\\\\tDecouvert autorise: %.2lf\\\\n\"',\n                        )\n                      exprs[1]=\n                        StructRef(\n                          type='->',\n                          name=\n                            ArrayRef(\n                              name=\n                                StructRef(\n                                  type='->',\n                                  name=\n                                    ID(\n                                      name='client',\n                                    )\n                                  field=\n                                    ID(\n                                      name='comptes',\n                                    )\n                                )\n                              subscript=\n                                ID(\n                                  name='i',\n                                )\n                            )\n                          field=\n                            ID(\n                              name='limite_decouvert',\n                            )\n                        )\n                    )\n                )\n              block_items[3]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='printf',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        Constant(\n                          type='string',\n                          value='\"\\\\tTaux d\\'interets: %.2lf\\\\n\"',\n                        )\n                      exprs[1]=\n                        StructRef(\n                          type='->',\n                          name=\n                            ArrayRef(\n                              name=\n                                StructRef(\n                                  type='->',\n                                  name=\n                                    ID(\n                                      name='client',\n                                    )\n                                  field=\n                                    ID(\n                                      name='comptes',\n                                    )\n                                )\n                              subscript=\n                                ID(\n                                  name='i',\n                                )\n                            )\n                          field=\n                            ID(\n                              name='taux_interets',\n                            )\n                        )\n                    )\n                )\n              block_items[4]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='printf',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        Constant(\n                          type='string',\n                          value='\"\\\\t--------------------------------\\\\n\"',\n                        )\n                    )\n                )\n            )\n        )\n    )\n)"
        },
        {
            "function_name": "client_ajouter_compte",
            "function_code": "void client_ajouter_compte(t_client* le_client)\n{\n\tt_compte** nouv_adresse; \n\n\tle_client->nb_comptes++;\n\n\tif (le_client->comptes != 0)\n\t{\n\t\tnouv_adresse = (t_compte**)realloc(le_client->comptes,\n\t\t\tle_client->nb_comptes * sizeof(t_compte*));\n\t\tif (nouv_adresse == 0)\n\t\t{\n\t\t\tprintf(\"Impossible d'ajouter un compte. Plus de memoire.\\n\");\n\t\t\treturn;\n\t\t}",
            "function_ast": "FuncDef(\n  decl=\n    Decl(\n      name='client_ajouter_compte',\n      quals=[],\n      align=[],\n      storage=[],\n      funcspec=[],\n      type=\n        FuncDecl(\n          args=\n            ParamList(\n              params[0]=\n                Decl(\n                  name='le_client',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    PtrDecl(\n                      quals=[],\n                      type=\n                        TypeDecl(\n                          declname='le_client',\n                          quals=[],\n                          align=None,\n                          type=\n                            IdentifierType(\n                              names=['t_client'],\n                            )\n                        )\n                    )\n                )\n            )\n          type=\n            TypeDecl(\n              declname='client_ajouter_compte',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['void'],\n                )\n            )\n        )\n    )\n  body=\n    Compound(\n      block_items[0]=\n        Decl(\n          name='nouv_adresse',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            PtrDecl(\n              quals=[],\n              type=\n                PtrDecl(\n                  quals=[],\n                  type=\n                    TypeDecl(\n                      declname='nouv_adresse',\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['t_compte'],\n                        )\n                    )\n                )\n            )\n        )\n      block_items[1]=\n        UnaryOp(\n          op='p++',\n          expr=\n            StructRef(\n              type='->',\n              name=\n                ID(\n                  name='le_client',\n                )\n              field=\n                ID(\n                  name='nb_comptes',\n                )\n            )\n        )\n      block_items[2]=\n        If(\n          cond=\n            BinaryOp(\n              op='!=',\n              left=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='le_client',\n                    )\n                  field=\n                    ID(\n                      name='comptes',\n                    )\n                )\n              right=\n                Constant(\n                  type='int',\n                  value='0',\n                )\n            )\n          iftrue=\n            Compound(\n              block_items[0]=\n                Assignment(\n                  op='=',\n                  lvalue=\n                    ID(\n                      name='nouv_adresse',\n                    )\n                  rvalue=\n                    Cast(\n                      to_type=\n                        Typename(\n                          name=None,\n                          quals=[],\n                          align=None,\n                          type=\n                            PtrDecl(\n                              quals=[],\n                              type=\n                                PtrDecl(\n                                  quals=[],\n                                  type=\n                                    TypeDecl(\n                                      declname=None,\n                                      quals=[],\n                                      align=None,\n                                      type=\n                                        IdentifierType(\n                                          names=['t_compte'],\n                                        )\n                                    )\n                                )\n                            )\n                        )\n                      expr=\n                        FuncCall(\n                          name=\n                            ID(\n                              name='realloc',\n                            )\n                          args=\n                            ExprList(\n                              exprs[0]=\n                                StructRef(\n                                  type='->',\n                                  name=\n                                    ID(\n                                      name='le_client',\n                                    )\n                                  field=\n                                    ID(\n                                      name='comptes',\n                                    )\n                                )\n                              exprs[1]=\n                                BinaryOp(\n                                  op='*',\n                                  left=\n                                    StructRef(\n                                      type='->',\n                                      name=\n                                        ID(\n                                          name='le_client',\n                                        )\n                                      field=\n                                        ID(\n                                          name='nb_comptes',\n                                        )\n                                    )\n                                  right=\n                                    UnaryOp(\n                                      op='sizeof',\n                                      expr=\n                                        Typename(\n                                          name=None,\n                                          quals=[],\n                                          align=None,\n                                          type=\n                                            PtrDecl(\n                                              quals=[],\n                                              type=\n                                                TypeDecl(\n                                                  declname=None,\n                                                  quals=[],\n                                                  align=None,\n                                                  type=\n                                                    IdentifierType(\n                                                      names=['t_compte'],\n                                                    )\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n              block_items[1]=\n                If(\n                  cond=\n                    BinaryOp(\n                      op='==',\n                      left=\n                        ID(\n                          name='nouv_adresse',\n                        )\n                      right=\n                        Constant(\n                          type='int',\n                          value='0',\n                        )\n                    )\n                  iftrue=\n                    Compound(\n                      block_items[0]=\n                        FuncCall(\n                          name=\n                            ID(\n                              name='printf',\n                            )\n                          args=\n                            ExprList(\n                              exprs[0]=\n                                Constant(\n                                  type='string',\n                                  value='\"Impossible d\\'ajouter un compte. Plus de memoire.\\\\n\"',\n                                )\n                            )\n                        )\n                      block_items[1]=\n                        Return(\n                        )\n                    )\n                )\n              block_items[2]=\n                Assignment(\n                  op='=',\n                  lvalue=\n                    StructRef(\n                      type='->',\n                      name=\n                        ID(\n                          name='le_client',\n                        )\n                      field=\n                        ID(\n                          name='comptes',\n                        )\n                    )\n                  rvalue=\n                    ID(\n                      name='nouv_adresse',\n                    )\n                )\n            )\n          iffalse=\n            Compound(\n              block_items[0]=\n                Assignment(\n                  op='=',\n                  lvalue=\n                    StructRef(\n                      type='->',\n                      name=\n                        ID(\n                          name='le_client',\n                        )\n                      field=\n                        ID(\n                          name='comptes',\n                        )\n                    )\n                  rvalue=\n                    Cast(\n                      to_type=\n                        Typename(\n                          name=None,\n                          quals=[],\n                          align=None,\n                          type=\n                            PtrDecl(\n                              quals=[],\n                              type=\n                                PtrDecl(\n                                  quals=[],\n                                  type=\n                                    TypeDecl(\n                                      declname=None,\n                                      quals=[],\n                                      align=None,\n                                      type=\n                                        IdentifierType(\n                                          names=['t_compte'],\n                                        )\n                                    )\n                                )\n                            )\n                        )\n                      expr=\n                        FuncCall(\n                          name=\n                            ID(\n                              name='malloc',\n                            )\n                          args=\n                            ExprList(\n                              exprs[0]=\n                                BinaryOp(\n                                  op='*',\n                                  left=\n                                    StructRef(\n                                      type='->',\n                                      name=\n                                        ID(\n                                          name='le_client',\n                                        )\n                                      field=\n                                        ID(\n                                          name='nb_comptes',\n                                        )\n                                    )\n                                  right=\n                                    UnaryOp(\n                                      op='sizeof',\n                                      expr=\n                                        Typename(\n                                          name=None,\n                                          quals=[],\n                                          align=None,\n                                          type=\n                                            PtrDecl(\n                                              quals=[],\n                                              type=\n                                                TypeDecl(\n                                                  declname=None,\n                                                  quals=[],\n                                                  align=None,\n                                                  type=\n                                                    IdentifierType(\n                                                      names=['t_compte'],\n                                                    )\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n              block_items[1]=\n                If(\n                  cond=\n                    BinaryOp(\n                      op='==',\n                      left=\n                        StructRef(\n                          type='->',\n                          name=\n                            ID(\n                              name='le_client',\n                            )\n                          field=\n                            ID(\n                              name='comptes',\n                            )\n                        )\n                      right=\n                        Constant(\n                          type='int',\n                          value='0',\n                        )\n                    )\n                  iftrue=\n                    Compound(\n                      block_items[0]=\n                        FuncCall(\n                          name=\n                            ID(\n                              name='printf',\n                            )\n                          args=\n                            ExprList(\n                              exprs[0]=\n                                Constant(\n                                  type='string',\n                                  value='\"Impossible d\\'ajouter un compte. Plus de memoire.\\\\n\"',\n                                )\n                            )\n                        )\n                      block_items[1]=\n                        Return(\n                        )\n                    )\n                )\n            )\n        )\n      block_items[3]=\n        Assignment(\n          op='=',\n          lvalue=\n            ArrayRef(\n              name=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='le_client',\n                    )\n                  field=\n                    ID(\n                      name='comptes',\n                    )\n                )\n              subscript=\n                BinaryOp(\n                  op='-',\n                  left=\n                    StructRef(\n                      type='->',\n                      name=\n                        ID(\n                          name='le_client',\n                        )\n                      field=\n                        ID(\n                          name='nb_comptes',\n                        )\n                    )\n                  right=\n                    Constant(\n                      type='int',\n                      value='1',\n                    )\n                )\n            )\n          rvalue=\n            FuncCall(\n              name=\n                ID(\n                  name='compte_init',\n                )\n            )\n        )\n    )\n)"
        },
        {
            "function_name": "client_supprimer_compte",
            "function_code": "void client_supprimer_compte(t_client* le_client, int indice_compte)\n{\n\tt_compte** nouv_adresse; \n\n\tcompte_destroy(le_client->comptes[indice_compte]);\n\n\tfor (int i = indice_compte+1; i < le_client->nb_comptes; i++)\n\t{\n\t\tle_client->comptes[i - 1] = le_client->comptes[i];\n\t}",
            "function_ast": "FuncDef(\n  decl=\n    Decl(\n      name='client_supprimer_compte',\n      quals=[],\n      align=[],\n      storage=[],\n      funcspec=[],\n      type=\n        FuncDecl(\n          args=\n            ParamList(\n              params[0]=\n                Decl(\n                  name='le_client',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    PtrDecl(\n                      quals=[],\n                      type=\n                        TypeDecl(\n                          declname='le_client',\n                          quals=[],\n                          align=None,\n                          type=\n                            IdentifierType(\n                              names=['t_client'],\n                            )\n                        )\n                    )\n                )\n              params[1]=\n                Decl(\n                  name='indice_compte',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    TypeDecl(\n                      declname='indice_compte',\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['int'],\n                        )\n                    )\n                )\n            )\n          type=\n            TypeDecl(\n              declname='client_supprimer_compte',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['void'],\n                )\n            )\n        )\n    )\n  body=\n    Compound(\n      block_items[0]=\n        Decl(\n          name='nouv_adresse',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            PtrDecl(\n              quals=[],\n              type=\n                PtrDecl(\n                  quals=[],\n                  type=\n                    TypeDecl(\n                      declname='nouv_adresse',\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['t_compte'],\n                        )\n                    )\n                )\n            )\n        )\n      block_items[1]=\n        FuncCall(\n          name=\n            ID(\n              name='compte_destroy',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                ArrayRef(\n                  name=\n                    StructRef(\n                      type='->',\n                      name=\n                        ID(\n                          name='le_client',\n                        )\n                      field=\n                        ID(\n                          name='comptes',\n                        )\n                    )\n                  subscript=\n                    ID(\n                      name='indice_compte',\n                    )\n                )\n            )\n        )\n      block_items[2]=\n        For(\n          init=\n            DeclList(\n              decls[0]=\n                Decl(\n                  name='i',\n                  quals=[],\n                  align=[],\n                  storage=[],\n                  funcspec=[],\n                  type=\n                    TypeDecl(\n                      declname='i',\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['int'],\n                        )\n                    )\n                  init=\n                    BinaryOp(\n                      op='+',\n                      left=\n                        ID(\n                          name='indice_compte',\n                        )\n                      right=\n                        Constant(\n                          type='int',\n                          value='1',\n                        )\n                    )\n                )\n            )\n          cond=\n            BinaryOp(\n              op='<',\n              left=\n                ID(\n                  name='i',\n                )\n              right=\n                StructRef(\n                  type='->',\n                  name=\n                    ID(\n                      name='le_client',\n                    )\n                  field=\n                    ID(\n                      name='nb_comptes',\n                    )\n                )\n            )\n          next=\n            UnaryOp(\n              op='p++',\n              expr=\n                ID(\n                  name='i',\n                )\n            )\n          stmt=\n            Compound(\n              block_items[0]=\n                Assignment(\n                  op='=',\n                  lvalue=\n                    ArrayRef(\n                      name=\n                        StructRef(\n                          type='->',\n                          name=\n                            ID(\n                              name='le_client',\n                            )\n                          field=\n                            ID(\n                              name='comptes',\n                            )\n                        )\n                      subscript=\n                        BinaryOp(\n                          op='-',\n                          left=\n                            ID(\n                              name='i',\n                            )\n                          right=\n                            Constant(\n                              type='int',\n                              value='1',\n                            )\n                        )\n                    )\n                  rvalue=\n                    ArrayRef(\n                      name=\n                        StructRef(\n                          type='->',\n                          name=\n                            ID(\n                              name='le_client',\n                            )\n                          field=\n                            ID(\n                              name='comptes',\n                            )\n                        )\n                      subscript=\n                        ID(\n                          name='i',\n                        )\n                    )\n                )\n            )\n        )\n      block_items[3]=\n        UnaryOp(\n          op='p--',\n          expr=\n            StructRef(\n              type='->',\n              name=\n                ID(\n                  name='le_client',\n                )\n              field=\n                ID(\n                  name='nb_comptes',\n                )\n            )\n        )\n      block_items[4]=\n        Assignment(\n          op='=',\n          lvalue=\n            ID(\n              name='nouv_adresse',\n            )\n          rvalue=\n            Cast(\n              to_type=\n                Typename(\n                  name=None,\n                  quals=[],\n                  align=None,\n                  type=\n                    PtrDecl(\n                      quals=[],\n                      type=\n                        PtrDecl(\n                          quals=[],\n                          type=\n                            TypeDecl(\n                              declname=None,\n                              quals=[],\n                              align=None,\n                              type=\n                                IdentifierType(\n                                  names=['t_compte'],\n                                )\n                            )\n                        )\n                    )\n                )\n              expr=\n                FuncCall(\n                  name=\n                    ID(\n                      name='realloc',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        StructRef(\n                          type='->',\n                          name=\n                            ID(\n                              name='le_client',\n                            )\n                          field=\n                            ID(\n                              name='comptes',\n                            )\n                        )\n                      exprs[1]=\n                        BinaryOp(\n                          op='*',\n                          left=\n                            StructRef(\n                              type='->',\n                              name=\n                                ID(\n                                  name='le_client',\n                                )\n                              field=\n                                ID(\n                                  name='nb_comptes',\n                                )\n                            )\n                          right=\n                            UnaryOp(\n                              op='sizeof',\n                              expr=\n                                Typename(\n                                  name=None,\n                                  quals=[],\n                                  align=None,\n                                  type=\n                                    PtrDecl(\n                                      quals=[],\n                                      type=\n                                        TypeDecl(\n                                          declname=None,\n                                          quals=[],\n                                          align=None,\n                                          type=\n                                            IdentifierType(\n                                              names=['t_compte'],\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        )\n      block_items[5]=\n        If(\n          cond=\n            BinaryOp(\n              op='==',\n              left=\n                ID(\n                  name='nouv_adresse',\n                )\n              right=\n                Constant(\n                  type='int',\n                  value='0',\n                )\n            )\n          iftrue=\n            Compound(\n              block_items[0]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='printf',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        Constant(\n                          type='string',\n                          value='\"Impossible de supprimer un compte. \\\\n\"',\n                        )\n                    )\n                )\n              block_items[1]=\n                Return(\n                )\n            )\n        )\n      block_items[6]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='->',\n              name=\n                ID(\n                  name='le_client',\n                )\n              field=\n                ID(\n                  name='comptes',\n                )\n            )\n          rvalue=\n            ID(\n              name='nouv_adresse',\n            )\n        )\n    )\n)"
        },
        {
            "function_name": "main",
            "function_code": "int main(void)\n{\n\n\tt_client* liste_clients[1000];\n\n\tliste_clients[0] = client_init(\"345 673 123\", \"Laporte\", \"Jean\");\n\t \n\t\n\t \n\tliste_clients[0]->date_naiss.jour = 10;\n\tliste_clients[0]->date_naiss.mois = 5;\n\tliste_clients[0]->date_naiss.annee = 1562;\n\n\tliste_clients[0]->nb_comptes = 0;\n\n\tclient_ajouter_compte(liste_clients[0]);\n\tstrcpy(liste_clients[0]->comptes[0]->identifiant, \"AB5676\");\n\tliste_clients[0]->comptes[0]->solde = 2000;\n\tliste_clients[0]->comptes[0]->limite_decouvert = 1500;\n\tliste_clients[0]->comptes[0]->taux_interets = 1.5;\n\n\tclient_ajouter_compte(liste_clients[0]);\n\tliste_clients[0]->comptes[1] = compte_init();\n\tstrcpy(liste_clients[0]->comptes[1]->identifiant, \"DF6789\");\n\tliste_clients[0]->comptes[1]->solde = 150;\n\tliste_clients[0]->comptes[1]->limite_decouvert = 0;\n\tliste_clients[0]->comptes[1]->taux_interets = 0.4;\n\n\tclient_afficher(liste_clients[0]);\n\n\tclient_supprimer_compte(liste_clients[0], 0);\n\n\tclient_afficher(liste_clients[0]);\n\n\tclient_destroy(liste_clients[0]);\n\tliste_clients[0] = 0;\n\n\n\n\t \n\n\n\tsystem(\"pause\");\n\treturn 0;\n}",
            "function_ast": "FuncDef(\n  decl=\n    Decl(\n      name='main',\n      quals=[],\n      align=[],\n      storage=[],\n      funcspec=[],\n      type=\n        FuncDecl(\n          args=\n            ParamList(\n              params[0]=\n                Typename(\n                  name=None,\n                  quals=[],\n                  align=None,\n                  type=\n                    TypeDecl(\n                      declname=None,\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['void'],\n                        )\n                    )\n                )\n            )\n          type=\n            TypeDecl(\n              declname='main',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['int'],\n                )\n            )\n        )\n    )\n  body=\n    Compound(\n      block_items[0]=\n        Decl(\n          name='liste_clients',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            ArrayDecl(\n              dim_quals=[],\n              type=\n                PtrDecl(\n                  quals=[],\n                  type=\n                    TypeDecl(\n                      declname='liste_clients',\n                      quals=[],\n                      align=None,\n                      type=\n                        IdentifierType(\n                          names=['t_client'],\n                        )\n                    )\n                )\n              dim=\n                Constant(\n                  type='int',\n                  value='1000',\n                )\n            )\n        )\n      block_items[1]=\n        Assignment(\n          op='=',\n          lvalue=\n            ArrayRef(\n              name=\n                ID(\n                  name='liste_clients',\n                )\n              subscript=\n                Constant(\n                  type='int',\n                  value='0',\n                )\n            )\n          rvalue=\n            FuncCall(\n              name=\n                ID(\n                  name='client_init',\n                )\n              args=\n                ExprList(\n                  exprs[0]=\n                    Constant(\n                      type='string',\n                      value='\"345 673 123\"',\n                    )\n                  exprs[1]=\n                    Constant(\n                      type='string',\n                      value='\"Laporte\"',\n                    )\n                  exprs[2]=\n                    Constant(\n                      type='string',\n                      value='\"Jean\"',\n                    )\n                )\n            )\n        )\n      block_items[2]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='.',\n              name=\n                StructRef(\n                  type='->',\n                  name=\n                    ArrayRef(\n                      name=\n                        ID(\n                          name='liste_clients',\n                        )\n                      subscript=\n                        Constant(\n                          type='int',\n                          value='0',\n                        )\n                    )\n                  field=\n                    ID(\n                      name='date_naiss',\n                    )\n                )\n              field=\n                ID(\n                  name='jour',\n                )\n            )\n          rvalue=\n            Constant(\n              type='int',\n              value='10',\n            )\n        )\n      block_items[3]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='.',\n              name=\n                StructRef(\n                  type='->',\n                  name=\n                    ArrayRef(\n                      name=\n                        ID(\n                          name='liste_clients',\n                        )\n                      subscript=\n                        Constant(\n                          type='int',\n                          value='0',\n                        )\n                    )\n                  field=\n                    ID(\n                      name='date_naiss',\n                    )\n                )\n              field=\n                ID(\n                  name='mois',\n                )\n            )\n          rvalue=\n            Constant(\n              type='int',\n              value='5',\n            )\n        )\n      block_items[4]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='.',\n              name=\n                StructRef(\n                  type='->',\n                  name=\n                    ArrayRef(\n                      name=\n                        ID(\n                          name='liste_clients',\n                        )\n                      subscript=\n                        Constant(\n                          type='int',\n                          value='0',\n                        )\n                    )\n                  field=\n                    ID(\n                      name='date_naiss',\n                    )\n                )\n              field=\n                ID(\n                  name='annee',\n                )\n            )\n          rvalue=\n            Constant(\n              type='int',\n              value='1562',\n            )\n        )\n      block_items[5]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='->',\n              name=\n                ArrayRef(\n                  name=\n                    ID(\n                      name='liste_clients',\n                    )\n                  subscript=\n                    Constant(\n                      type='int',\n                      value='0',\n                    )\n                )\n              field=\n                ID(\n                  name='nb_comptes',\n                )\n            )\n          rvalue=\n            Constant(\n              type='int',\n              value='0',\n            )\n        )\n      block_items[6]=\n        FuncCall(\n          name=\n            ID(\n              name='client_ajouter_compte',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                ArrayRef(\n                  name=\n                    ID(\n                      name='liste_clients',\n                    )\n                  subscript=\n                    Constant(\n                      type='int',\n                      value='0',\n                    )\n                )\n            )\n        )\n      block_items[7]=\n        FuncCall(\n          name=\n            ID(\n              name='strcpy',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                StructRef(\n                  type='->',\n                  name=\n                    ArrayRef(\n                      name=\n                        StructRef(\n                          type='->',\n                          name=\n                            ArrayRef(\n                              name=\n                                ID(\n                                  name='liste_clients',\n                                )\n                              subscript=\n                                Constant(\n                                  type='int',\n                                  value='0',\n                                )\n                            )\n                          field=\n                            ID(\n                              name='comptes',\n                            )\n                        )\n                      subscript=\n                        Constant(\n                          type='int',\n                          value='0',\n                        )\n                    )\n                  field=\n                    ID(\n                      name='identifiant',\n                    )\n                )\n              exprs[1]=\n                Constant(\n                  type='string',\n                  value='\"AB5676\"',\n                )\n            )\n        )\n      block_items[8]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='->',\n              name=\n                ArrayRef(\n                  name=\n                    StructRef(\n                      type='->',\n                      name=\n                        ArrayRef(\n                          name=\n                            ID(\n                              name='liste_clients',\n                            )\n                          subscript=\n                            Constant(\n                              type='int',\n                              value='0',\n                            )\n                        )\n                      field=\n                        ID(\n                          name='comptes',\n                        )\n                    )\n                  subscript=\n                    Constant(\n                      type='int',\n                      value='0',\n                    )\n                )\n              field=\n                ID(\n                  name='solde',\n                )\n            )\n          rvalue=\n            Constant(\n              type='int',\n              value='2000',\n            )\n        )\n      block_items[9]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='->',\n              name=\n                ArrayRef(\n                  name=\n                    StructRef(\n                      type='->',\n                      name=\n                        ArrayRef(\n                          name=\n                            ID(\n                              name='liste_clients',\n                            )\n                          subscript=\n                            Constant(\n                              type='int',\n                              value='0',\n                            )\n                        )\n                      field=\n                        ID(\n                          name='comptes',\n                        )\n                    )\n                  subscript=\n                    Constant(\n                      type='int',\n                      value='0',\n                    )\n                )\n              field=\n                ID(\n                  name='limite_decouvert',\n                )\n            )\n          rvalue=\n            Constant(\n              type='int',\n              value='1500',\n            )\n        )\n      block_items[10]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='->',\n              name=\n                ArrayRef(\n                  name=\n                    StructRef(\n                      type='->',\n                      name=\n                        ArrayRef(\n                          name=\n                            ID(\n                              name='liste_clients',\n                            )\n                          subscript=\n                            Constant(\n                              type='int',\n                              value='0',\n                            )\n                        )\n                      field=\n                        ID(\n                          name='comptes',\n                        )\n                    )\n                  subscript=\n                    Constant(\n                      type='int',\n                      value='0',\n                    )\n                )\n              field=\n                ID(\n                  name='taux_interets',\n                )\n            )\n          rvalue=\n            Constant(\n              type='double',\n              value='1.5',\n            )\n        )\n      block_items[11]=\n        FuncCall(\n          name=\n            ID(\n              name='client_ajouter_compte',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                ArrayRef(\n                  name=\n                    ID(\n                      name='liste_clients',\n                    )\n                  subscript=\n                    Constant(\n                      type='int',\n                      value='0',\n                    )\n                )\n            )\n        )\n      block_items[12]=\n        Assignment(\n          op='=',\n          lvalue=\n            ArrayRef(\n              name=\n                StructRef(\n                  type='->',\n                  name=\n                    ArrayRef(\n                      name=\n                        ID(\n                          name='liste_clients',\n                        )\n                      subscript=\n                        Constant(\n                          type='int',\n                          value='0',\n                        )\n                    )\n                  field=\n                    ID(\n                      name='comptes',\n                    )\n                )\n              subscript=\n                Constant(\n                  type='int',\n                  value='1',\n                )\n            )\n          rvalue=\n            FuncCall(\n              name=\n                ID(\n                  name='compte_init',\n                )\n            )\n        )\n      block_items[13]=\n        FuncCall(\n          name=\n            ID(\n              name='strcpy',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                StructRef(\n                  type='->',\n                  name=\n                    ArrayRef(\n                      name=\n                        StructRef(\n                          type='->',\n                          name=\n                            ArrayRef(\n                              name=\n                                ID(\n                                  name='liste_clients',\n                                )\n                              subscript=\n                                Constant(\n                                  type='int',\n                                  value='0',\n                                )\n                            )\n                          field=\n                            ID(\n                              name='comptes',\n                            )\n                        )\n                      subscript=\n                        Constant(\n                          type='int',\n                          value='1',\n                        )\n                    )\n                  field=\n                    ID(\n                      name='identifiant',\n                    )\n                )\n              exprs[1]=\n                Constant(\n                  type='string',\n                  value='\"DF6789\"',\n                )\n            )\n        )\n      block_items[14]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='->',\n              name=\n                ArrayRef(\n                  name=\n                    StructRef(\n                      type='->',\n                      name=\n                        ArrayRef(\n                          name=\n                            ID(\n                              name='liste_clients',\n                            )\n                          subscript=\n                            Constant(\n                              type='int',\n                              value='0',\n                            )\n                        )\n                      field=\n                        ID(\n                          name='comptes',\n                        )\n                    )\n                  subscript=\n                    Constant(\n                      type='int',\n                      value='1',\n                    )\n                )\n              field=\n                ID(\n                  name='solde',\n                )\n            )\n          rvalue=\n            Constant(\n              type='int',\n              value='150',\n            )\n        )\n      block_items[15]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='->',\n              name=\n                ArrayRef(\n                  name=\n                    StructRef(\n                      type='->',\n                      name=\n                        ArrayRef(\n                          name=\n                            ID(\n                              name='liste_clients',\n                            )\n                          subscript=\n                            Constant(\n                              type='int',\n                              value='0',\n                            )\n                        )\n                      field=\n                        ID(\n                          name='comptes',\n                        )\n                    )\n                  subscript=\n                    Constant(\n                      type='int',\n                      value='1',\n                    )\n                )\n              field=\n                ID(\n                  name='limite_decouvert',\n                )\n            )\n          rvalue=\n            Constant(\n              type='int',\n              value='0',\n            )\n        )\n      block_items[16]=\n        Assignment(\n          op='=',\n          lvalue=\n            StructRef(\n              type='->',\n              name=\n                ArrayRef(\n                  name=\n                    StructRef(\n                      type='->',\n                      name=\n                        ArrayRef(\n                          name=\n                            ID(\n                              name='liste_clients',\n                            )\n                          subscript=\n                            Constant(\n                              type='int',\n                              value='0',\n                            )\n                        )\n                      field=\n                        ID(\n                          name='comptes',\n                        )\n                    )\n                  subscript=\n                    Constant(\n                      type='int',\n                      value='1',\n                    )\n                )\n              field=\n                ID(\n                  name='taux_interets',\n                )\n            )\n          rvalue=\n            Constant(\n              type='double',\n              value='0.4',\n            )\n        )\n      block_items[17]=\n        FuncCall(\n          name=\n            ID(\n              name='client_afficher',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                ArrayRef(\n                  name=\n                    ID(\n                      name='liste_clients',\n                    )\n                  subscript=\n                    Constant(\n                      type='int',\n                      value='0',\n                    )\n                )\n            )\n        )\n      block_items[18]=\n        FuncCall(\n          name=\n            ID(\n              name='client_supprimer_compte',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                ArrayRef(\n                  name=\n                    ID(\n                      name='liste_clients',\n                    )\n                  subscript=\n                    Constant(\n                      type='int',\n                      value='0',\n                    )\n                )\n              exprs[1]=\n                Constant(\n                  type='int',\n                  value='0',\n                )\n            )\n        )\n      block_items[19]=\n        FuncCall(\n          name=\n            ID(\n              name='client_afficher',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                ArrayRef(\n                  name=\n                    ID(\n                      name='liste_clients',\n                    )\n                  subscript=\n                    Constant(\n                      type='int',\n                      value='0',\n                    )\n                )\n            )\n        )\n      block_items[20]=\n        FuncCall(\n          name=\n            ID(\n              name='client_destroy',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                ArrayRef(\n                  name=\n                    ID(\n                      name='liste_clients',\n                    )\n                  subscript=\n                    Constant(\n                      type='int',\n                      value='0',\n                    )\n                )\n            )\n        )\n      block_items[21]=\n        Assignment(\n          op='=',\n          lvalue=\n            ArrayRef(\n              name=\n                ID(\n                  name='liste_clients',\n                )\n              subscript=\n                Constant(\n                  type='int',\n                  value='0',\n                )\n            )\n          rvalue=\n            Constant(\n              type='int',\n              value='0',\n            )\n        )\n      block_items[22]=\n        FuncCall(\n          name=\n            ID(\n              name='system',\n            )\n          args=\n            ExprList(\n              exprs[0]=\n                Constant(\n                  type='string',\n                  value='\"pause\"',\n                )\n            )\n        )\n      block_items[23]=\n        Return(\n          expr=\n            Constant(\n              type='int',\n              value='0',\n            )\n        )\n    )\n)"
        }
    ]
}