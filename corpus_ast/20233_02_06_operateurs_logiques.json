{
    "project_name": "20233_02_06_operateurs_logiques",
    "functions": [
        {
            "function_name": "main",
            "function_code": "int main() {\n    int x;\n\n    x = 15;\n\n    if( 10 < x  &&  x< 20 )\n    {\n        printf(\"x est dans l'intervalle!\\n\");\n    }",
            "function_ast": "FuncDef(\n  decl=\n    Decl(\n      name='main',\n      quals=[],\n      align=[],\n      storage=[],\n      funcspec=[],\n      type=\n        FuncDecl(\n          type=\n            TypeDecl(\n              declname='main',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['int'],\n                )\n            )\n        )\n    )\n  body=\n    Compound(\n      block_items[0]=\n        Decl(\n          name='x',\n          quals=[],\n          align=[],\n          storage=[],\n          funcspec=[],\n          type=\n            TypeDecl(\n              declname='x',\n              quals=[],\n              align=None,\n              type=\n                IdentifierType(\n                  names=['int'],\n                )\n            )\n        )\n      block_items[1]=\n        Assignment(\n          op='=',\n          lvalue=\n            ID(\n              name='x',\n            )\n          rvalue=\n            Constant(\n              type='int',\n              value='15',\n            )\n        )\n      block_items[2]=\n        If(\n          cond=\n            BinaryOp(\n              op='&&',\n              left=\n                BinaryOp(\n                  op='<',\n                  left=\n                    Constant(\n                      type='int',\n                      value='10',\n                    )\n                  right=\n                    ID(\n                      name='x',\n                    )\n                )\n              right=\n                BinaryOp(\n                  op='<',\n                  left=\n                    ID(\n                      name='x',\n                    )\n                  right=\n                    Constant(\n                      type='int',\n                      value='20',\n                    )\n                )\n            )\n          iftrue=\n            Compound(\n              block_items[0]=\n                FuncCall(\n                  name=\n                    ID(\n                      name='printf',\n                    )\n                  args=\n                    ExprList(\n                      exprs[0]=\n                        Constant(\n                          type='string',\n                          value='\"x est dans l\\'intervalle!\\\\n\"',\n                        )\n                    )\n                )\n            )\n        )\n      block_items[3]=\n        Return(\n          expr=\n            Constant(\n              type='int',\n              value='0',\n            )\n        )\n    )\n)"
        }
    ]
}